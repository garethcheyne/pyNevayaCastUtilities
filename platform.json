{
    "openapi": "3.0.0",
    "info": {
        "title": "Nevaya Platform",
        "version": "1.0.0",
        "x-logo": {
            "url": "https://nevaya-site-data.s3-eu-west-1.amazonaws.com/openapi/logo.png",
            "backgroundColor": "#333"
        },
        "contact": {
            "name": "Nevaya Ltd",
            "url": "https://www.nevaya.co.uk",
            "email": "contact@nevaya.co.uk"
        },
        "description": "Access to everything Nevaya"
    },
    "servers": [
        {
            "url": "https://platform-api.services.nevaya.net/v1"
        }
    ],
    "paths": {
        "/reservations": {
            "get": {
                "summary": "Get reservations",
                "tags": [
                    "Reservations"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Reservation"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-reservations",
                "description": "Get all the reservations matching the specified filters.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    },
                    {
                        "$ref": "#/components/parameters/GuestID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameCont"
                    },
                    {
                        "$ref": "#/components/parameters/ReservationNumber"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/GuestFirstNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/GuestFirstNameCont"
                    },
                    {
                        "$ref": "#/components/parameters/GuestLastNameCont"
                    },
                    {
                        "$ref": "#/components/parameters/GuestLastNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/RoomIDs"
                    },
                    {
                        "$ref": "#/components/parameters/GuestIDs"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPage"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPer"
                    },
                    {
                        "$ref": "#/components/parameters/PMSID"
                    },
                    {
                        "$ref": "#/components/parameters/PMSIDs"
                    }
                ]
            },
            "delete": {
                "summary": "Delete reservation(s)",
                "operationId": "delete-reservations",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "reservation_id",
                        "description": "The reservation ID to delete"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "guest_id",
                        "description": "The guest ID"
                    }
                ],
                "description": "Check a guest out of a room by deleting the reservation. Specifying `guest_id` checks that guest out of all rooms they currently have a reservation for. `reservation_id` or `guest_id` is required.",
                "tags": [
                    "Reservations"
                ]
            },
            "post": {
                "summary": "Get reservations",
                "operationId": "post-get-reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Reservation"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Option to use post in case query would exceed the GET size limits",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "site_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The site ID"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    },
                                    "room_ids": {
                                        "type": "array",
                                        "description": "Room IDs",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "guest_first_name_eq": {
                                        "type": "string",
                                        "description": "Guest first name equals"
                                    },
                                    "guest_first_name_cont": {
                                        "type": "string",
                                        "description": "Guest first name contains"
                                    },
                                    "guest_last_name_eq": {
                                        "type": "string",
                                        "description": "Guest last name equals"
                                    },
                                    "guest_last_name_cont": {
                                        "type": "string",
                                        "description": "Guest last name contains"
                                    },
                                    "room_name_cont": {
                                        "type": "string",
                                        "description": "Room name contains"
                                    },
                                    "room_name_eq": {
                                        "type": "string",
                                        "description": "Room name equals"
                                    },
                                    "pms_id": {
                                        "type": "string",
                                        "description": "PMS / external ID",
                                        "pattern": "^[A-Za-z0-9 -_]+$"
                                    },
                                    "pms_ids": {
                                        "type": "array",
                                        "description": "PMS / external IDs",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[A-Za-z0-9 -_]+$"
                                        }
                                    },
                                    "page": {
                                        "type": "integer",
                                        "description": "Required page number in paginated results"
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "description": "Number of results per page"
                                    },
                                    "guest_id": {
                                        "type": "string",
                                        "description": "The guest ID",
                                        "format": "uuid"
                                    },
                                    "guest_ids": {
                                        "type": "array",
                                        "description": "Guest IDs",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "reservation_number": {
                                        "type": "string",
                                        "pattern": "^[A-Za-z0-9 -_]+$",
                                        "description": "Reservation number usually assigned by the PMS"
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Reservations"
                ]
            }
        },
        "/auth": {
            "post": {
                "summary": "Generate an auth token",
                "operationId": "post-auth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "The bearer token to use in future API requests"
                                        }
                                    }
                                },
                                "examples": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "default": "InvalidAPIKey"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "API key is invalid"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "default": "401"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Generate a JSON web token to be used to authenticate future API calls.\n\nTo get your API token go to https://portal.nevaya.net and sign in. Clicking the ![blue button](https://nevaya-site-data.s3-eu-west-1.amazonaws.com/openapi/api-key-button.png \"API key\") in the banner copies your API key to the clipboard. **Do not share your key with anyone.**\n\nIf you don't see the button it may be that your account doesn't have access to the API, please contact Nevaya support to have it added. \n\nGenerated tokens will expire automatically after six months, but can be expired at any time before then. Should that happen a `401` error will be returned from any protected API call, at which point a new token should be generated and used.",
                "tags": [
                    "Auth"
                ],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "description": "Your API token"
                                    }
                                },
                                "required": [
                                    "token"
                                ]
                            }
                        }
                    }
                }
            },
            "parameters": []
        },
        "/reservations/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/UUID_ID"
                }
            ],
            "get": {
                "summary": "Retrieve a reservation",
                "tags": [
                    "Reservations"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Reservation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-reservations-id",
                "description": "Get the specified reservation"
            },
            "put": {
                "summary": "Update a reservation",
                "operationId": "put-reservations-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Reservation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationForm"
                            },
                            "examples": {
                                "Example changing guest first name and updating the posting allowed": {
                                    "value": {
                                        "first_name": "Bob",
                                        "posting_allowed": true
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Reservations"
                ],
                "description": "Update the specified reservation. Partial updates are supported"
            }
        },
        "/rooms": {
            "get": {
                "summary": "Get rooms",
                "tags": [
                    "Rooms"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/RoomWithDevices"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                },
                                "examples": {
                                    "With devices": {
                                        "value": {
                                            "data": [
                                                {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied",
                                                    "chromecasts": [
                                                        {
                                                            "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                            "mac": "00:11:22:33:44:55",
                                                            "ip": "192.168.1.1",
                                                            "wifi": {
                                                                "noise": -86,
                                                                "signal": -62,
                                                                "snr": 26,
                                                                "hotspot_bssid": "55:44:33:22:11:00",
                                                                "ssid": "Floor 2"
                                                            },
                                                            "app": {
                                                                "display_name": "Nevaya Cast",
                                                                "status_text": "Nevaya Cast",
                                                                "id": "2E79930D",
                                                                "idle_screen": false,
                                                                "started_at": "2020-08-24T14:38:43.835Z"
                                                            },
                                                            "timestamp": "2020-08-24T16:22:42.156Z"
                                                        }
                                                    ],
                                                    "receivers": [
                                                        {
                                                            "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                            "mac": "00:11:22:33:44:55",
                                                            "ip": "192.168.1.1",
                                                            "status": {
                                                                "volume": 12,
                                                                "mute": false,
                                                                "power": "on",
                                                                "mode": "external",
                                                                "id": "hdmi1",
                                                                "name": "Playstation",
                                                                "timestamp": "2020-08-24T16:22:42.156Z"
                                                            }
                                                        }
                                                    ],
                                                    "created_at": 1603138915,
                                                    "updated_at": 1603138915
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    },
                                    "Without devices": {
                                        "value": {
                                            "data": [
                                                {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied",
                                                    "chromecasts": [],
                                                    "receivers": [],
                                                    "created_at": 1603138915,
                                                    "updated_at": 1603138915
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-rooms",
                "description": "Get all the rooms matching the filters",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "name": "page",
                        "description": "Required page number in paginated results"
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "minimum": 0,
                            "maximum": 200
                        },
                        "in": "query",
                        "name": "per_page",
                        "description": "Number of results per page"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name_cont",
                        "description": "Room name contains the value"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name_eq",
                        "description": "Room name equals the value"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "name": "devices",
                        "description": "Include the associated devices with the room data"
                    },
                    {
                        "$ref": "#/components/parameters/RoomIDs"
                    }
                ]
            },
            "post": {
                "summary": "Get rooms",
                "operationId": "post-rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/RoomWithDevices"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                },
                                "examples": {
                                    "With devices": {
                                        "value": {
                                            "data": [
                                                {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied",
                                                    "chromecasts": [
                                                        {
                                                            "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                            "mac": "00:11:22:33:44:55",
                                                            "ip": "192.168.1.1",
                                                            "wifi": {
                                                                "noise": -86,
                                                                "signal": -62,
                                                                "snr": 26,
                                                                "hotspot_bssid": "55:44:33:22:11:00",
                                                                "ssid": "Floor 2"
                                                            },
                                                            "app": {
                                                                "display_name": "Nevaya Cast",
                                                                "status_text": "Nevaya Cast",
                                                                "id": "2E79930D",
                                                                "idle_screen": false,
                                                                "started_at": "2020-08-24T14:38:43.835Z"
                                                            },
                                                            "timestamp": "2020-08-24T16:22:42.156Z"
                                                        }
                                                    ],
                                                    "receivers": [
                                                        {
                                                            "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                            "mac": "00:11:22:33:44:55",
                                                            "ip": "192.168.1.1",
                                                            "status": {
                                                                "volume": 12,
                                                                "mute": false,
                                                                "power": "on",
                                                                "mode": "external",
                                                                "id": "hdmi1",
                                                                "name": "Playstation",
                                                                "timestamp": "2020-08-24T16:22:42.156Z"
                                                            }
                                                        }
                                                    ],
                                                    "created_at": 1603138915,
                                                    "updated_at": 1603138915
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    },
                                    "Without devices": {
                                        "value": {
                                            "data": [
                                                {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied",
                                                    "chromecasts": [],
                                                    "receivers": [],
                                                    "created_at": 1603138915,
                                                    "updated_at": 1603138915
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "site_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name_cont": {
                                        "type": "string",
                                        "description": "Room name contains the value"
                                    },
                                    "name_eq": {
                                        "type": "string",
                                        "description": "Room name equals the value"
                                    },
                                    "room_ids": {
                                        "type": "array",
                                        "description": "Array of room IDs",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "devices": {
                                        "type": "boolean",
                                        "description": "Include the associated devices with the room data"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "description": "Required page number in paginated results"
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "description": "Number of results per page"
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "description": "Get all the rooms matching the filters",
                "tags": [
                    "Rooms"
                ]
            }
        },
        "/rooms/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/UUID_ID"
                }
            ],
            "put": {
                "summary": "Update a room",
                "operationId": "put-rooms-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Room"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Update a room",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoomStatus"
                            }
                        }
                    }
                },
                "tags": [
                    "Rooms"
                ]
            },
            "get": {
                "summary": "Get a room",
                "operationId": "get-rooms-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoomWithDevices"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Rooms"
                ],
                "description": ""
            }
        },
        "/tv/receivers": {
            "get": {
                "summary": "Get receivers",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Receiver"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers",
                "description": "Get the list of receivers (TVs, STBs etc)",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPage"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPer"
                    },
                    {
                        "$ref": "#/components/parameters/ReceiverIDs"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameCont"
                    }
                ]
            },
            "post": {
                "summary": "Get receivers",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Receiver"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "post-tv-receivers",
                "description": "Get the list of receivers (TVs, STBs etc). Returns the same as the `GET` version but by using `POST` it allows more filter options to be applied without hitting any limits on `GET` requests",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "site_id": {
                                        "type": "string",
                                        "description": "May be ignored depending on user access rights, for example if the user only has access to a single site that sites' ID will be used",
                                        "format": "uuid"
                                    },
                                    "page": {
                                        "type": "integer",
                                        "description": "Required page number in paginated results",
                                        "example": 1
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "description": "Number of results per page",
                                        "example": 1
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "description": "The room ID",
                                        "format": "uuid"
                                    },
                                    "room_name_eq": {
                                        "type": "string",
                                        "description": "The room name matches the value exactly",
                                        "example": "237"
                                    },
                                    "room_name_cont": {
                                        "type": "string",
                                        "description": "The room name contains the value",
                                        "example": "Lou"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Array of receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                }
            }
        },
        "/tv/receivers/control": {
            "post": {
                "summary": "Control multiple receivers",
                "operationId": "post-tv-receivers-control",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "receiver_id": {
                                            "format": "uuid",
                                            "type": "string",
                                            "description": "The receiver ID"
                                        },
                                        "volume": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 100
                                        },
                                        "mute": {
                                            "type": "boolean"
                                        },
                                        "key": {
                                            "type": "string",
                                            "enum": [
                                                "back",
                                                "exit",
                                                "select",
                                                "up",
                                                "down",
                                                "right",
                                                "left",
                                                "channel_up",
                                                "channel_down",
                                                "mute",
                                                "unmute",
                                                "volume_up",
                                                "volume_down",
                                                "forward",
                                                "rewind",
                                                "stop",
                                                "pause",
                                                "play",
                                                "power"
                                            ]
                                        },
                                        "power": {
                                            "type": "string",
                                            "enum": [
                                                "on",
                                                "off"
                                            ]
                                        },
                                        "seek": {
                                            "type": "integer",
                                            "description": "Position in milliseconds to seek to when playing a movie.",
                                            "example": 960000,
                                            "minimum": 0
                                        },
                                        "room_tag_id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Control all receivers in a room tagged with this room tag"
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Example": {
                                    "value": [
                                        {
                                            "id": "1d78318b-5f57-40aa-862c-d7f8aa14c4ae",
                                            "volume": 20
                                        },
                                        {
                                            "id": "7070d79a-dff3-4ba1-802b-34d5ed4522e4",
                                            "key": "left"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "description": "Send multiple control operations to multiple receivers. `receiver_id` or `room_tag_id` is required, if both are provided then `room_tag_id` will be ignored."
                },
                "tags": [
                    "TV"
                ]
            }
        },
        "/tv/receivers/channels": {
            "get": {
                "summary": "Get all channels available to a receiver",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ChannelsResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-id-channels",
                "description": "",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReceiverID"
                    }
                ]
            }
        },
        "/tv/receivers/movies": {
            "get": {
                "summary": "Get all movies available to the receiver",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MoviesResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-id-movies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReceiverID"
                    }
                ]
            }
        },
        "/tv/receivers/videos": {
            "get": {
                "summary": "Get videos for a receiver",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Video"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-id-videos",
                "description": "Get a list of unencrypted HLS streams associated with the receiver",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReceiverID"
                    }
                ]
            }
        },
        "/tv/receivers/sources": {
            "get": {
                "summary": "Get external sources for a receiver",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Source"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-id-sources",
                "description": "Returns a list of defined external sources for the receiver, i.e. HDMI 1, HDMI 2 etc",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReceiverID"
                    }
                ]
            }
        },
        "/tv/receivers/data": {
            "get": {
                "summary": "Get all the data for a receiver",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "channels": {
                                                    "$ref": "#/components/schemas/ChannelsResponse"
                                                },
                                                "movies": {
                                                    "$ref": "#/components/schemas/MoviesResponse"
                                                },
                                                "sources": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Source"
                                                    }
                                                },
                                                "videos": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Video"
                                                    }
                                                },
                                                "applications": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReceiverApplication"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-id-data",
                "description": "Includes movies, channels, videos etc",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReceiverID"
                    }
                ]
            }
        },
        "/tv/receivers/applications": {
            "get": {
                "summary": "Get a list of applications available to the receiver",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReceiverApplication"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-id-applications",
                "description": "These are pre-installed applications such as YouTube etc",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ReceiverID"
                    }
                ]
            }
        },
        "/tv/receivers/pairing-codes": {
            "post": {
                "summary": "Get the pairing codes for the receiver(s)",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "The receiver ID",
                                                        "format": "uuid"
                                                    },
                                                    "qr": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "The URL to the QR code image. Will be `null` unless `qr` is set to true"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "description": "The pairing code for the receiver",
                                                        "example": "G5TRY"
                                                    },
                                                    "token": {
                                                        "type": "string",
                                                        "description": "The pairing token. Using this skips the need to confirm pairing"
                                                    },
                                                    "expires": {
                                                        "type": "integer",
                                                        "description": "Number of seconds the pairing code information is valid for"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "post-tv-receivers-pairing-codes",
                "description": "Optionally return a URL to the QR code image that matches the pairing code by setting `qr` to `true`",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "An array of receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "colour": {
                                        "type": "string",
                                        "description": "The foreground colour of the QR code in HEX format",
                                        "default": "#000",
                                        "example": "#333"
                                    },
                                    "fill": {
                                        "type": "string",
                                        "description": "The background colour of the QR code in HEX format",
                                        "default": "#fff",
                                        "example": "#ff6200"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "Size of the image in px, always returns a square image",
                                        "default": 200,
                                        "minimum": 100,
                                        "maximum": 800,
                                        "example": 150
                                    },
                                    "qr": {
                                        "type": "boolean",
                                        "default": "false",
                                        "description": "Include the matching QR code image"
                                    }
                                },
                                "required": [
                                    "receiver_ids"
                                ]
                            }
                        }
                    },
                    "description": ""
                }
            }
        },
        "/guests": {
            "get": {
                "summary": "Get all guests",
                "tags": [
                    "Guests"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Guest"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-guests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PaginationPage"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPer"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "first_name_eq",
                        "description": "Guests first name equals the specified value"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "last_name_eq",
                        "description": "Guest last name equals the specified value"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "first_name_cont",
                        "description": "Guest first name contains the specified value"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "last_name_cont",
                        "description": "Guest last name contains the specified value"
                    },
                    {
                        "$ref": "#/components/parameters/CompanyID"
                    },
                    {
                        "$ref": "#/components/parameters/PMSID"
                    },
                    {
                        "$ref": "#/components/parameters/CompanyIDs"
                    },
                    {
                        "$ref": "#/components/parameters/PMSIDs"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}(, *[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12})*"
                        },
                        "in": "query",
                        "name": "ids",
                        "description": "Comma separated list of guest IDs"
                    }
                ],
                "description": "Get all the guests matching the filter. Guests are scoped to a company"
            },
            "post": {
                "summary": "Get all guests",
                "operationId": "post-guests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Guest"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Option to use post in case query would exceed the GET size limits",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "page": {
                                        "type": "integer",
                                        "example": 3,
                                        "description": "Required page number in paginated results"
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "minimum": 25,
                                        "maximum": 200,
                                        "example": 25,
                                        "description": "Number of results per page"
                                    },
                                    "company_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The company ID"
                                    },
                                    "company_ids": {
                                        "type": "array",
                                        "description": "The company IDs",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "first_name_eq": {
                                        "type": "string",
                                        "description": "Guest first name equals the specified value"
                                    },
                                    "first_name_cont": {
                                        "type": "string",
                                        "description": "Guest first name contains the specified value"
                                    },
                                    "last_name_eq": {
                                        "type": "string",
                                        "description": "Guest last name equals the specified value"
                                    },
                                    "last_name_cont": {
                                        "type": "string",
                                        "description": "Guest last name contains the specified value"
                                    },
                                    "pms_id": {
                                        "type": "string",
                                        "description": "PMS / external ID",
                                        "pattern": "^[A-Za-z0-9 -_]+$"
                                    },
                                    "pms_ids": {
                                        "type": "array",
                                        "description": "PMS / external IDs",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[A-Za-z0-9 -_]+$"
                                        }
                                    },
                                    "ids": {
                                        "type": "array",
                                        "description": "Guest IDs",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Guests"
                ]
            }
        },
        "/guests/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/UUID_ID"
                }
            ],
            "get": {
                "summary": "Get a specific guest",
                "tags": [
                    "Guests"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Guest"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-guests-id",
                "description": ""
            },
            "put": {
                "summary": "Update a guest",
                "operationId": "put-guests-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Guest"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "example": "Bob",
                                                "description": "Given name"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Smythington",
                                                "description": "Family name"
                                            },
                                            "vip": {
                                                "type": "boolean",
                                                "description": "VIP status"
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Mr",
                                                "description": "Guests title"
                                            },
                                            "pms_id": {
                                                "type": "string",
                                                "example": "123456789",
                                                "description": "Identifier assigned by the PMS (if there is one) or used to identify the guest between systems",
                                                "pattern": "^[A-Za-z0-9 -_]+$"
                                            }
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/SupportedLocales"
                                    }
                                ]
                            },
                            "examples": {
                                "Example": {
                                    "value": {
                                        "last_name": "Hope",
                                        "vip": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Update all or part of the guests data"
                },
                "description": "",
                "tags": [
                    "Guests"
                ]
            },
            "delete": {
                "summary": "Delete a guest",
                "operationId": "delete-guests-id",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Deletes a guest and any associated data such as reservations",
                "tags": [
                    "Guests"
                ]
            }
        },
        "/movies/purchases": {
            "get": {
                "summary": "Get all the movies purchased",
                "tags": [
                    "Movies"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PurchasedMovie"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "examples": {
                                    "Guest ID missing": {
                                        "value": {
                                            "type": "Bad Request",
                                            "message": "Guest, reservation or room ID is required",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-guests-id-movies",
                "description": "Returns a list of all valid movies for the given `guest_id`, `reservation_id` or `room_id`. \n\nAt least one field is required.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/RoomID"
                    },
                    {
                        "$ref": "#/components/parameters/ReservationID"
                    },
                    {
                        "$ref": "#/components/parameters/GuestID"
                    }
                ]
            },
            "post": {
                "summary": "Purchase a movie",
                "operationId": "post-movies-purchases",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PurchasedMovie"
                                        }
                                    }
                                },
                                "examples": {}
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Purchase a movie",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "guest_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The guest ID"
                                    },
                                    "reservation_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The reservation ID"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    },
                                    "movie_id": {
                                        "type": "string",
                                        "description": "The ID of the movie to purhase",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "movie_id"
                                ]
                            }
                        }
                    },
                    "description": "If purchase is made using `room_id` then the main guest will be used, the first guest checked into a room in the case of multiple reservations for a single room. Only one field is required, but if `room_id` is specified it will be ignored in preference to either the `guest_id` or `reservation_id`.\n\nIf there is already a valid purchase for the movie and guest then that will be returned. "
                },
                "tags": [
                    "Movies"
                ]
            }
        },
        "/tv/receivers/movies/play": {
            "post": {
                "summary": "Play a movie on a receiver",
                "operationId": "post-tv-receivers-id-movies-play",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "402": {
                        "description": "Payment Required\n\nThe movie must be purchased before it will play.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "examples": {
                                    "Movie not purchased": {
                                        "value": {
                                            "type": "Payment Required",
                                            "message": "Movie has not been purchased",
                                            "status": 402
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Play a purchased movie on the receiver. \n\nRequires `vod_accessible` to be true.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "language": {
                                        "type": "string",
                                        "description": "The ISO 639-1 code of the available movie languages\n\n| Code   | Language     |                                  |\n|--------|--------------|----------------------------------|\n| en | English      |                                  |\n| fr | Français     |                                  |\n| es | Español      |                                  |\n| de | Deutsch      |                                  |\n| it | Italiano     |                                  |\n| un | Undetermined | _Generally this will be English_ |\n| nl | Nederlands   |                                  |",
                                        "example": "en",
                                        "enum": [
                                            "en",
                                            "de",
                                            "fr",
                                            "es",
                                            "it",
                                            "nl",
                                            "un"
                                        ]
                                    },
                                    "resume": {
                                        "type": "boolean",
                                        "description": "Restart the movie from the previous position if available",
                                        "example": true
                                    },
                                    "movie_id": {
                                        "type": "string",
                                        "description": "The ID of the movie to be played",
                                        "format": "uuid"
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "movie_id"
                                ]
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                },
                "tags": [
                    "TV"
                ]
            }
        },
        "/tv/receivers/channels/play": {
            "post": {
                "summary": "Change the channel on the receiver(s)",
                "operationId": "post-tv-receivers-id-channels-play",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "channel_id": {
                                        "type": "string",
                                        "description": "The channel ID",
                                        "format": "uuid"
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "channel_id"
                                ]
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                },
                "tags": [
                    "TV"
                ]
            }
        },
        "/tv/receivers/videos/play": {
            "post": {
                "summary": "Play a video on the receiver(s)",
                "operationId": "post-tv-receivers-id-videos-play",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "video_id": {
                                        "type": "string",
                                        "description": "The video ID",
                                        "format": "uuid"
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "video_id"
                                ]
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                },
                "tags": [
                    "TV"
                ]
            }
        },
        "/tv/receivers/sources/switch": {
            "post": {
                "summary": "Switch external source on the receiver(s)",
                "operationId": "post-tv-receivers-id-sources-switch",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source_id": {
                                        "type": "string",
                                        "description": "The ID of the source to switch to",
                                        "example": "hdmi1",
                                        "enum": [
                                            "hdmi1",
                                            "hdmi2",
                                            "hdmi3",
                                            "av",
                                            "pc",
                                            "component"
                                        ]
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                },
                "tags": [
                    "TV"
                ],
                "description": ""
            }
        },
        "/tv/receivers/sources/exit": {
            "post": {
                "summary": "Exit the current external source on the receiver(s)",
                "operationId": "post-tv-receivers-id-sources-exit",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "tags": [
                    "TV"
                ],
                "description": "Exits the current external source and returns the receiver to it's home screen",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                }
            }
        },
        "/tv/receivers/applications/open": {
            "post": {
                "summary": "Open an application on the receiver(s)",
                "operationId": "post-tv-receivers-id-applications-open",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "application_id": {
                                        "type": "string",
                                        "description": "The application ID",
                                        "format": "uuid"
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "application_id"
                                ]
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                },
                "tags": [
                    "TV"
                ]
            }
        },
        "/tv/receivers/applications/close": {
            "post": {
                "summary": "Close the currently open application on the receiver(s)",
                "operationId": "post-tv-receivers-id-applications-close",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "tags": [
                    "TV"
                ],
                "description": "Closes the current application (Youtube, Netflix etc) and returns the receiver to the home screen",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver_id": {
                                        "type": "string",
                                        "description": "The receiver ID",
                                        "format": "uuid"
                                    },
                                    "room_tag_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "receiver_ids": {
                                        "type": "array",
                                        "description": "Multiple receiver IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "At least one of `receiver_id`, `room_tag_id` or a non empty list of receiver IDs is required"
                }
            }
        },
        "/cast/chromecasts": {
            "get": {
                "summary": "Get a list of chromecasts",
                "tags": [
                    "Cast"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/Chromecast"
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "room": {
                                                                        "$ref": "#/components/schemas/Room"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "mac": "00:11:22:33:44:55",
                                                    "ip": "192.168.1.1",
                                                    "wifi": {
                                                        "noise": -86,
                                                        "signal": -62,
                                                        "snr": 26,
                                                        "hotspot_bssid": "55:44:33:22:11:00",
                                                        "ssid": "Floor 2"
                                                    },
                                                    "app": {
                                                        "display_name": "Nevaya Cast",
                                                        "status_text": "Nevaya Cast",
                                                        "id": "2E79930D",
                                                        "idle_screen": false,
                                                        "started_at": "2020-08-24T14:38:43.835Z"
                                                    },
                                                    "timestamp": "2020-08-24T16:22:42.156Z",
                                                    "room": {
                                                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                        "name": "101",
                                                        "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                        "status": "Dirty/Occupied"
                                                    }
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-cast-chromecasts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PaginationPage"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPer"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameCont"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "a797442a-f3e2-47ba-a255-6237a46b6b2b"
                        },
                        "in": "query",
                        "name": "site_id",
                        "description": "The site ID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomIDs"
                    }
                ],
                "description": "Get a list of chromecasts"
            },
            "post": {
                "summary": "Get a list of chromecasts",
                "operationId": "post-cast-chromecasts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/Chromecast"
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "room": {
                                                                        "$ref": "#/components/schemas/Room"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "mac": "00:11:22:33:44:55",
                                                    "ip": "192.168.1.1",
                                                    "wifi": {
                                                        "noise": -86,
                                                        "signal": -62,
                                                        "snr": 26,
                                                        "hotspot_bssid": "55:44:33:22:11:00",
                                                        "ssid": "Floor 2"
                                                    },
                                                    "app": {
                                                        "display_name": "Nevaya Cast",
                                                        "status_text": "Nevaya Cast",
                                                        "id": "2E79930D",
                                                        "idle_screen": false,
                                                        "started_at": "2020-08-24T14:38:43.835Z"
                                                    },
                                                    "timestamp": "2020-08-24T16:22:42.156Z",
                                                    "room": {
                                                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                        "name": "101",
                                                        "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                        "status": "Dirty/Occupied"
                                                    }
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Option to use post in case query would exceed the GET size limits",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "site_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "f7fd200f-6004-480d-9f20-6f0ed8e65692",
                                        "description": "The site ID"
                                    },
                                    "room_ids": {
                                        "type": "array",
                                        "description": "Array of room IDs",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "7dccb356-cbcc-477a-b335-aa48b14bfa1f"
                                        }
                                    },
                                    "page": {
                                        "type": "integer",
                                        "description": "Current page"
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "minimum": 25,
                                        "maximum": 200,
                                        "description": "Number of results per page"
                                    },
                                    "room_name_cont": {
                                        "type": "string",
                                        "description": "Return chromecasts based on a partial name match"
                                    },
                                    "room_name_eq": {
                                        "type": "string",
                                        "description": "Return chromecasts based on room name"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cast"
                ]
            }
        },
        "/cast/chromecasts/{chromecast_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d2af0a7e-d1d9-4df5-a738-7e80c667460c"
                    },
                    "name": "chromecast_id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the chromecast"
                }
            ],
            "get": {
                "summary": "Get a chromecast",
                "tags": [
                    "Cast"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Chromecast"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "room": {
                                                            "$ref": "#/components/schemas/Room"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": {
                                                "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                "mac": "00:11:22:33:44:55",
                                                "ip": "192.168.1.1",
                                                "wifi": {
                                                    "noise": -86,
                                                    "signal": -62,
                                                    "snr": 26,
                                                    "hotspot_bssid": "55:44:33:22:11:00",
                                                    "ssid": "Floor 2"
                                                },
                                                "app": {
                                                    "display_name": "Nevaya Cast",
                                                    "status_text": "Nevaya Cast",
                                                    "id": "2E79930D",
                                                    "idle_screen": false,
                                                    "started_at": "2020-08-24T14:38:43.835Z"
                                                },
                                                "timestamp": "2020-08-24T16:22:42.156Z",
                                                "room": {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-cast-chromecasts-id",
                "description": "",
                "parameters": []
            },
            "put": {
                "summary": "Update a chromecast",
                "operationId": "put-cast-chromecasts-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Chromecast"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "room": {
                                                            "$ref": "#/components/schemas/Room"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": {
                                                "id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                                "mac": "00:11:22:33:44:55",
                                                "ip": "192.168.1.1",
                                                "wifi": {
                                                    "noise": -86,
                                                    "signal": -62,
                                                    "snr": 26,
                                                    "hotspot_bssid": "55:44:33:22:11:00",
                                                    "ssid": "Floor 2"
                                                },
                                                "app": {
                                                    "display_name": "Nevaya Cast",
                                                    "status_text": "Nevaya Cast",
                                                    "id": "2E79930D",
                                                    "idle_screen": false,
                                                    "started_at": "2020-08-24T14:38:43.835Z"
                                                },
                                                "timestamp": "2020-08-24T16:22:42.156Z",
                                                "room": {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Update a chromecast",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c448d473-e303-4190-bba3-5830c56eb557",
                                        "description": "The ID of the room"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cast"
                ]
            }
        },
        "/cast/chromecasts/pairing-codes": {
            "post": {
                "summary": "Get the pairing codes for the chromecast(s)",
                "tags": [
                    "Cast"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                                        "description": "The chromecast ID",
                                                        "format": "uuid"
                                                    },
                                                    "qr": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "QR code in SVG"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "description": "The pairing code for the chromecast",
                                                        "example": "G5TRY"
                                                    },
                                                    "token": {
                                                        "type": "string",
                                                        "description": "The pairing token. Using this skips the need to confirm pairing"
                                                    },
                                                    "expires": {
                                                        "type": "integer",
                                                        "description": "Number of seconds the pairing code information is valid for"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "post-cast-chromecasts-pairing-codes",
                "description": "Pairing codes expire so they must be fetched occasionally. Optionally return a QR code in SVG",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chromecast_ids": {
                                        "type": "array",
                                        "description": "An array of chromecast IDs",
                                        "example": [
                                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "colour": {
                                        "type": "string",
                                        "description": "The foreground colour of the QR code in HEX format",
                                        "default": "#000",
                                        "example": "#333"
                                    },
                                    "fill": {
                                        "type": "string",
                                        "description": "The background colour of the QR code in HEX format",
                                        "default": "#fff",
                                        "example": "#ff6200"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "description": "Size of the image in px, always returns a square image",
                                        "default": 200,
                                        "minimum": 100,
                                        "maximum": 800,
                                        "example": 150
                                    },
                                    "qr": {
                                        "description": "Include the matching QR code image. If set to a string the string should be a URL. The QR code will point to `<url>?token=<token>`",
                                        "oneOf": [
                                            {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The QR code will point to `<url>?token=<token>`"
                                            },
                                            {
                                                "type": "boolean",
                                                "description": "Include the QR image with the default URL",
                                                "default": false
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "chromecast_ids"
                                ]
                            }
                        }
                    },
                    "description": ""
                }
            }
        },
        "/cast/chromecasts/reset": {
            "post": {
                "summary": "Reset the chromecast(s)",
                "operationId": "post-cast-chromecasts-id-reset",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Load the Nevaya application",
                "tags": [
                    "Cast"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chromecast_ids": {
                                        "type": "array",
                                        "description": "An array of chromecast IDs",
                                        "example": [
                                            "3c0ba00b-8c78-4e78-afb9-eb5bf1f3cdad",
                                            "db66bb65-bea5-4d47-a296-18e94f5c4c40",
                                            "678b57ab-aa02-4531-828d-1e4292ee6606"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "example": "678b57ab-aa02-4531-828d-1e4292ee6606",
                                            "format": "uuid"
                                        }
                                    },
                                    "chromecast_id": {
                                        "type": "string",
                                        "example": "678b57ab-aa02-4531-828d-1e4292ee6606",
                                        "description": "The chromecast ID",
                                        "format": "uuid"
                                    }
                                }
                            },
                            "examples": {}
                        }
                    },
                    "description": "Either `chromecast_id` is specified or a non empty `chromecast_ids` array is required. If both are specified then `chromecast_ids` is ignored"
                }
            }
        },
        "/cast/chromecasts/reboot": {
            "post": {
                "summary": "Reboot the chromecast(s)",
                "operationId": "post-cast-chromecasts-id-reboot",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Reboot the specified chromecast(s)",
                "tags": [
                    "Cast"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chromecast_ids": {
                                        "type": "array",
                                        "description": "An array of chromecast IDs",
                                        "example": [
                                            "3c0ba00b-8c78-4e78-afb9-eb5bf1f3cdad",
                                            "db66bb65-bea5-4d47-a296-18e94f5c4c40",
                                            "678b57ab-aa02-4531-828d-1e4292ee6606"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "example": "678b57ab-aa02-4531-828d-1e4292ee6606",
                                            "format": "uuid"
                                        }
                                    },
                                    "chromecast_id": {
                                        "type": "string",
                                        "example": "678b57ab-aa02-4531-828d-1e4292ee6606",
                                        "description": "The chromecast ID",
                                        "format": "uuid"
                                    }
                                }
                            },
                            "examples": {}
                        }
                    },
                    "description": "Either `chromecast_id` is specified or a non empty `chromecast_ids` array is required. If both are specified then `chromecast_ids` is ignored"
                }
            }
        },
        "/cast/connections": {
            "get": {
                "summary": "Get all valid connections",
                "tags": [
                    "Cast"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/GuestDeviceConnection"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "chromecast": {
                                                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                        "mac": "00:11:22:33:44:55",
                                                        "ip": "192.168.1.1",
                                                        "wifi": {
                                                            "noise": -86,
                                                            "signal": -62,
                                                            "snr": 26,
                                                            "hotspot_bssid": "55:44:33:22:11:00",
                                                            "ssid": "Floor 2"
                                                        },
                                                        "app": {
                                                            "display_name": "Nevaya Cast",
                                                            "status_text": "Nevaya Cast",
                                                            "id": "2E79930D",
                                                            "idle_screen": false,
                                                            "started_at": "2020-08-24T14:38:43.835Z"
                                                        },
                                                        "timestamp": "2020-08-24T16:22:42.156Z"
                                                    },
                                                    "room": {
                                                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                        "name": "101",
                                                        "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                        "status": "Dirty/Occupied"
                                                    },
                                                    "guest_device": {
                                                        "id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                                        "mac": "00:11:22:33:44:55"
                                                    },
                                                    "expires_at": 1603138915
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-cast-connections",
                "description": "",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PaginationPage"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPer"
                    },
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/RoomNameCont"
                    },
                    {
                        "$ref": "#/components/parameters/GuestFirstNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/GuestLastNameEq"
                    },
                    {
                        "$ref": "#/components/parameters/GuestFirstNameCont"
                    },
                    {
                        "$ref": "#/components/parameters/GuestLastNameCont"
                    },
                    {
                        "$ref": "#/components/parameters/GuestID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    },
                    {
                        "$ref": "#/components/parameters/ChromecastID"
                    },
                    {
                        "$ref": "#/components/parameters/GuestIDs"
                    },
                    {
                        "$ref": "#/components/parameters/RoomIDs"
                    },
                    {
                        "$ref": "#/components/parameters/ChromecastIDs"
                    }
                ]
            },
            "post": {
                "summary": "Get all valid connections",
                "operationId": "post-cast-connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/GuestDeviceConnection"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "chromecast": {
                                                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                        "mac": "00:11:22:33:44:55",
                                                        "ip": "192.168.1.1",
                                                        "wifi": {
                                                            "noise": -86,
                                                            "signal": -62,
                                                            "snr": 26,
                                                            "hotspot_bssid": "55:44:33:22:11:00",
                                                            "ssid": "Floor 2"
                                                        },
                                                        "app": {
                                                            "display_name": "Nevaya Cast",
                                                            "status_text": "Nevaya Cast",
                                                            "id": "2E79930D",
                                                            "idle_screen": false,
                                                            "started_at": "2020-08-24T14:38:43.835Z"
                                                        },
                                                        "timestamp": "2020-08-24T16:22:42.156Z"
                                                    },
                                                    "room": {
                                                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                        "name": "101",
                                                        "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                        "status": "Dirty/Occupied"
                                                    },
                                                    "guest_device": {
                                                        "id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                                        "mac": "00:11:22:33:44:55"
                                                    },
                                                    "expires_at": 1603138915
                                                }
                                            ],
                                            "page": 1,
                                            "total_pages": 1,
                                            "count": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Option to use post in case query would exceed the GET size limits",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "site_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "f7fd200f-6004-480d-9f20-6f0ed8e65692",
                                        "description": "May be ignored depending on user access rights, for example if the user only has access to a single site that sites' ID will be used"
                                    },
                                    "room_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "page": {
                                        "type": "integer",
                                        "description": "Current page"
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "minimum": 25,
                                        "maximum": 200,
                                        "description": "Number of results per page"
                                    },
                                    "room_name_cont": {
                                        "type": "string",
                                        "description": "Return chromecasts based on a partial name match",
                                        "example": "23"
                                    },
                                    "room_name_eq": {
                                        "type": "string",
                                        "description": "Return chromecasts based on room name",
                                        "example": "237"
                                    },
                                    "guest_first_name_cont": {
                                        "type": "string",
                                        "description": "The guests first name contains the value",
                                        "example": "Lou"
                                    },
                                    "guest_first_name_eq": {
                                        "type": "string",
                                        "description": "The guests first name matches the value exactly",
                                        "example": "Louise"
                                    },
                                    "guest_last_name_cont": {
                                        "type": "string",
                                        "description": "The guests last name contains the value",
                                        "example": "Sm"
                                    },
                                    "guest_last_name_eq": {
                                        "type": "string",
                                        "description": "The guests last name matches the value exactly",
                                        "example": "Smith"
                                    },
                                    "guest_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The guest ID"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    },
                                    "chromecast_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The chromecast ID"
                                    },
                                    "guest_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "chromecast_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Cast"
                ]
            }
        },
        "/room-control/interel/state": {
            "get": {
                "summary": "Get the Interel room state",
                "tags": [
                    "Interel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "DevThermos": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ActiveSetPoint": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 22.1,
                                                                "description": "Active setpoint is the current setpoint in the room. Which can be set-point forced by the Guest / Set-point forced from server in case of checked-out/Room is unoccupied."
                                                            },
                                                            "ActualTemp": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 22.8,
                                                                "description": "Room current temperature"
                                                            },
                                                            "FanSpeed": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Low",
                                                                    "Medium",
                                                                    "High",
                                                                    "Auto",
                                                                    "Eco",
                                                                    "Off"
                                                                ],
                                                                "description": "The current fan mode"
                                                            },
                                                            "SetPoint": {
                                                                "type": "number",
                                                                "example": 20,
                                                                "description": "Desired temperature set by the user"
                                                            },
                                                            "ThermostatId": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "WindowState": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Closed",
                                                                    "Open"
                                                                ],
                                                                "description": "Is the window open or closed"
                                                            },
                                                            "ValveStatus": {
                                                                "type": "string",
                                                                "example": "OFF|Cooling|0",
                                                                "description": "The state has 3 parts `{valveValue}|{mode}|{valvePercentage}`\n\n**ValveValue**:\n* ON\n* OFF\n\n**Mode**:\n* Cooling\n* Heating\n\n**ValvePercentage**:\n* 0-100\n* N/A – in case the valve type is ON/OFF"
                                                            }
                                                        }
                                                    }
                                                },
                                                "Dnd": {
                                                    "type": "boolean",
                                                    "description": "Do not disturb"
                                                },
                                                "Mur": {
                                                    "type": "boolean",
                                                    "description": "Make up room"
                                                },
                                                "Presence": {
                                                    "type": "boolean",
                                                    "description": "Guest present in the room"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-room-control-interel-state",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "room_id",
                        "description": "The room ID",
                        "required": true
                    }
                ]
            }
        },
        "/room-control/interel/set-fan-speed": {
            "post": {
                "summary": "Set the fan speed for the room",
                "operationId": "post-room-control-interel-set-fan-speed",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "speed": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High",
                                            "Auto",
                                            "Eco",
                                            "Off"
                                        ],
                                        "description": "The desired speed",
                                        "example": "Medium"
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "The of the associated thermostat",
                                        "example": "1"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "speed",
                                    "id",
                                    "room_id"
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "Interel"
                ]
            }
        },
        "/room-control/interel/set-temperature": {
            "post": {
                "summary": "Set the temperature of a thermostat in the room",
                "operationId": "post-room-control-interel-set-temperature",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "temperature": {
                                        "type": "number",
                                        "example": 22,
                                        "description": "The desired temperature",
                                        "minimum": 18,
                                        "maximum": 28
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "The thermostat ID",
                                        "example": "1"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "temperature",
                                    "id",
                                    "room_id"
                                ]
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Interel"
                ]
            }
        },
        "/room-control/interel/toggle-light": {
            "parameters": [],
            "post": {
                "summary": "Toggle a light",
                "operationId": "post-room-control-interel-toggle-light",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "BedsideLeftToggle"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "id",
                                    "room_id"
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "Interel"
                ]
            }
        },
        "/room-control/interel/set-scene": {
            "post": {
                "summary": "Set a scene",
                "operationId": "post-room-control-interel-set-scene",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "MasterToggle"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "id",
                                    "room_id"
                                ]
                            }
                        }
                    }
                },
                "description": "",
                "tags": [
                    "Interel"
                ]
            }
        },
        "/room-control/interel/set-curtain-state": {
            "post": {
                "summary": "Control the curtains in the room",
                "operationId": "post-room-control-interel-set-curtain-state",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The ID of the curtains to change"
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "Open",
                                            "Close",
                                            "Stop"
                                        ],
                                        "description": "`Open`: Opens the curtains\n`Close`: Closes the curtains\n`Stop`: Stops the current operation\n\nNote: There's no feedback from this other than what the guest sees"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "id",
                                    "state",
                                    "room_id"
                                ]
                            }
                        }
                    }
                },
                "description": "",
                "tags": [
                    "Interel"
                ]
            }
        },
        "/room-control/interel/set-blind-state": {
            "post": {
                "summary": "Control the blinds in the room",
                "operationId": "post-room-control-interel-set-blind-state",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The ID of the blinds to change"
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "Open",
                                            "Close",
                                            "Stop"
                                        ],
                                        "description": "`Open`: Opens the blinds\n`Close`: Closes the blinds\n`Stop`: Stops the current operation\n\nNote: There's no feedback from this other than what the guest sees"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "id",
                                    "state",
                                    "room_id"
                                ]
                            }
                        }
                    }
                },
                "description": "",
                "tags": [
                    "Interel"
                ]
            }
        },
        "/room-control/info": {
            "get": {
                "summary": "Room control info",
                "tags": [
                    "Room control"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "room_control_provider": {
                                                    "type": "string",
                                                    "enum": [
                                                        "interel",
                                                        "dummy"
                                                    ],
                                                    "example": "interel",
                                                    "description": "The room control provider, if there is one"
                                                },
                                                "interel": {
                                                    "$ref": "#/components/schemas/Interel"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-room-control-info",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "room_id",
                        "required": true,
                        "description": "The room ID"
                    }
                ],
                "description": "Find out what's available in the room and who the provider is."
            }
        },
        "/weather/current": {
            "get": {
                "summary": "Get the current weather",
                "tags": [
                    "Weather"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentWeather"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-weather-current",
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "example": 40.7127753
                        },
                        "in": "query",
                        "name": "lat",
                        "required": true,
                        "description": "Latitude"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "example": -74.0059728
                        },
                        "in": "query",
                        "name": "lng",
                        "required": true,
                        "description": "Longitude"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "de"
                        },
                        "in": "query",
                        "name": "lang",
                        "description": "The ISO 639-1 code of the language to return the data in"
                    }
                ],
                "description": "Get the current weather for the given latitude and longitude found in the weather section of the data endpoint."
            }
        },
        "/weather/all": {
            "get": {
                "summary": "Get all the weather",
                "tags": [
                    "Weather"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllWeather"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-weather-all",
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "example": 40.7127753
                        },
                        "in": "query",
                        "name": "lat",
                        "required": true,
                        "description": "Latitude"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "example": -74.0059728
                        },
                        "in": "query",
                        "name": "lng",
                        "required": true,
                        "description": "Longitude"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "default": "en",
                            "example": "de"
                        },
                        "in": "query",
                        "name": "lang",
                        "description": "The ISO 639-1 code of the language to return the data in"
                    }
                ],
                "description": "Get all the weather for the given latitude and longitude found in the weather section of the data endpoint."
            }
        },
        "/room-control/interel/set-dnd-state": {
            "post": {
                "summary": "Set the do not disturb state for the room",
                "operationId": "post-room-control-interel-set-dnd-state",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "boolean",
                                        "description": "The do not disturb state for the room."
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    }
                                },
                                "required": [
                                    "state",
                                    "room_id"
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "Interel"
                ]
            }
        },
        "/movies": {
            "get": {
                "summary": "Get the available movies",
                "tags": [
                    "Movies"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "movies": {
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "valid_to": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "description": "If present, indicates the movie has been purchased and when access ends. Only available if `room_id` is set, otherwise will always be `null`"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/Movie"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "genres": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/MovieGenre"
                                                    }
                                                },
                                                "subgenres": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/MovieSubGenre"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-movies",
                "description": "Returns all the movies for the site or room. If `room_id` is specified then `site_id` is ignored.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    }
                ]
            }
        },
        "/identity/mac": {
            "get": {
                "summary": "Get the MAC discovery URL",
                "tags": [
                    "Identity"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Returned if there are no appliances on site"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-mac",
                "description": "This returns a URL that can be used to discover the MAC address of the guest device. If the URL is present then performing a GET request from the device whose MAC address you want to find will return the following:\n\n```json\n{\n  \"data\": \"<mac address>\"\n}\n```\n\nIf the MAC address cannot be found then a `404` message will be returned.\n\n**Note**: A TV management or cast server appliance is required on site",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    }
                ]
            }
        },
        "/epg/data": {
            "get": {
                "summary": "Get EPG data",
                "tags": [
                    "EPG"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "epg_id": {
                                                "type": "string",
                                                "description": "The EPG ID of the channel"
                                            },
                                            "programmes": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/EPGProgramme"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-epg-programmes",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "7562,8998"
                        },
                        "in": "query",
                        "name": "epg_ids",
                        "description": "Comma separated list of channel EPG IDs",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "default": 3,
                            "maximum": 24,
                            "minimum": 3,
                            "example": 6
                        },
                        "in": "query",
                        "name": "hours",
                        "description": "How many hours of programming information required"
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 48,
                            "example": 12
                        },
                        "in": "query",
                        "name": "offset",
                        "description": "How many hours into the future should the programming information start"
                    }
                ]
            },
            "parameters": []
        },
        "/epg/now-and-next": {
            "get": {
                "summary": "Get the programmes that are on now and next",
                "tags": [
                    "EPG"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "epg_id": {
                                                "type": "string",
                                                "description": "The EPG ID of the channel"
                                            },
                                            "now": {
                                                "$ref": "#/components/schemas/EPGProgramme"
                                            },
                                            "next": {
                                                "$ref": "#/components/schemas/EPGProgramme"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-epg-now-and-next",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "example": "7563,8899"
                        },
                        "in": "query",
                        "name": "epg_ids",
                        "description": "Comma separated list of channel EPG IDs",
                        "required": true
                    }
                ]
            }
        },
        "/tv/receivers/embeddable-remote": {
            "get": {
                "summary": "Get a link to an application that can be displayed in an iframe",
                "tags": [
                    "TV"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URL with access token (JWT) for the specified receiver"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tv-receivers-embeddable-remote",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "receiver_id",
                        "required": true,
                        "description": "The receiver ID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "default": "24 hours after initial request"
                        },
                        "in": "query",
                        "name": "expires_at",
                        "description": "When should the token expire"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "example": "#67116d",
                            "default": "#38373D"
                        },
                        "in": "query",
                        "name": "background",
                        "description": "Background colour"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "example": "#79387D",
                            "default": "#525257"
                        },
                        "in": "query",
                        "name": "button",
                        "description": "Button background colour, an appropriate text colour will be automatically chosen"
                    }
                ],
                "description": "Returns a URL with an access token (JWT) for the specified receiver."
            }
        },
        "/cast/connections/expire": {
            "post": {
                "summary": "Expire connections",
                "operationId": "post-cast-connections-expire",
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "All guest device connections that match the applied filter will be expired. No connections will be expired if there isn't at least one filter present.",
                "tags": [
                    "Cast"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The room ID"
                                    },
                                    "chromecast_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The chromecast ID"
                                    },
                                    "room_name_eq": {
                                        "type": "string",
                                        "example": "Lou",
                                        "description": "The room name contains the value"
                                    },
                                    "room_name_cont": {
                                        "type": "string",
                                        "example": "237",
                                        "description": "The room name matches the value exactly"
                                    },
                                    "guest_device_mac": {
                                        "type": "string",
                                        "description": "The MAC address of the guest device",
                                        "example": "11:22:33:44:55:66",
                                        "pattern": "^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$"
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                }
            }
        },
        "/cast/connections/connect": {
            "post": {
                "summary": "Connect a guest device",
                "operationId": "post-cast-connections-connect",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GuestDeviceConnection"
                                        }
                                    }
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": {
                                                "chromecast": {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f32",
                                                    "mac": "00:11:22:33:44:55",
                                                    "ip": "192.168.1.1",
                                                    "wifi": {
                                                        "noise": -86,
                                                        "signal": -62,
                                                        "snr": 26,
                                                        "hotspot_bssid": "55:44:33:22:11:00",
                                                        "ssid": "Floor 2"
                                                    },
                                                    "app": {
                                                        "display_name": "Nevaya Cast",
                                                        "status_text": "Nevaya Cast",
                                                        "id": "2E79930D",
                                                        "idle_screen": false,
                                                        "started_at": "2020-08-24T14:38:43.835Z"
                                                    },
                                                    "timestamp": "2020-08-24T16:22:42.156Z"
                                                },
                                                "room": {
                                                    "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                                                    "name": "101",
                                                    "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                                                    "status": "Dirty/Occupied"
                                                },
                                                "guest_device": {
                                                    "id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                                    "mac": "00:11:22:33:44:55"
                                                },
                                                "expires_at": 1603138915
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Create a connection between a guest device and a chromecast",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "guest_device_id": {
                                        "type": "string",
                                        "description": "The ID of the guest device",
                                        "format": "uuid"
                                    },
                                    "guest_device_mac": {
                                        "type": "string",
                                        "description": "The MAC address of the guest device",
                                        "example": "11:22:33:44:55:66",
                                        "pattern": "^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$"
                                    },
                                    "chromecast_id": {
                                        "type": "string",
                                        "description": "The chromecast ID",
                                        "format": "uuid"
                                    },
                                    "hours": {
                                        "description": "The number of hours to allow the guest device access to the chromecast. Passing `permanent` means that the connection will never automatically expire",
                                        "oneOf": [
                                            {
                                                "type": "string",
                                                "enum": [
                                                    "permanent"
                                                ],
                                                "description": "Permanent connection"
                                            },
                                            {
                                                "type": "number",
                                                "description": "Number of hours before the connection expires"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "chromecast_id"
                                ]
                            },
                            "examples": {
                                "Connect a device to a chromecast permanently": {
                                    "value": {
                                        "guest_device_mac": "00:11:22:33:44:55",
                                        "chromecast_id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                        "hours": "permanent"
                                    }
                                }
                            }
                        }
                    },
                    "description": "`guest_device_id` or `guest_device_mac` must be present.\n\n`hours` can be specified as the number of hours before the connection is automatically expired, or `permanent` to ensure the connection is never automatically expired. Defaults to the configured value in the Nevaya Cast application.\n"
                },
                "tags": [
                    "Cast"
                ]
            }
        },
        "/guests/create": {
            "post": {
                "summary": "Create a guest",
                "operationId": "post-guests-create",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Guest"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Normally guests will be created as part of the check in process or via a PMS.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "description": "The guests given name",
                                                "example": "Cedric"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "description": "The guests family name",
                                                "example": "Smythington"
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "The guests title",
                                                "example": "Mr"
                                            },
                                            "pms_id": {
                                                "type": "string",
                                                "description": "Identifier assigned by the PMS (if there is one) or used to identify the guest between systems",
                                                "pattern": "^[A-Za-z0-9 -_]+$"
                                            },
                                            "vip": {
                                                "type": "boolean",
                                                "description": "Does the guest have VIP status?"
                                            },
                                            "company_id": {
                                                "type": "string",
                                                "format": "uuid",
                                                "description": "Company ID. Defaults to the user company ID"
                                            }
                                        },
                                        "required": [
                                            "first_name",
                                            "last_name",
                                            "title"
                                        ]
                                    },
                                    {
                                        "$ref": "#/components/schemas/SupportedLocales"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "Guests"
                ]
            }
        },
        "/reservations/create": {
            "post": {
                "summary": "Check a guest into a room",
                "operationId": "post-reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Reservation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "description": "Create a reservation",
                "tags": [
                    "Reservations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationForm"
                            },
                            "examples": {
                                "Example with guest ID": {
                                    "value": {
                                        "room_id": "03a57da5-62af-497d-bcc1-8f6520600c8a",
                                        "guest_id": "0faf7d86-b212-4038-aa02-1b89124c09b3",
                                        "reservation_number": "12345678",
                                        "sharer": false,
                                        "posting_allowed": true,
                                        "tv_rights": "unlimited",
                                        "minibar_rights": "normal"
                                    }
                                },
                                "Example with guest name": {
                                    "value": {
                                        "room_id": "03a57da5-62af-497d-bcc1-8f6520600c8a",
                                        "first_name": "Cedric",
                                        "last_name": "Smythington",
                                        "reservation_number": "12345678",
                                        "sharer": false,
                                        "posting_allowed": false,
                                        "tv_rights": "no_tv",
                                        "minibar_rights": "locked"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Requires either a guest ID or the guests first and last names. Automatically creates a guest if no matching guests are found."
                },
                "parameters": []
            }
        },
        "/touch/token": {
            "post": {
                "summary": "Get a token to use in Touch API",
                "operationId": "post-touch-token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reservation_id": {
                                        "type": "string",
                                        "description": "The reservation ID",
                                        "format": "uuid"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "description": "The room ID",
                                        "format": "uuid"
                                    }
                                }
                            }
                        }
                    },
                    "description": "At least one of `reservation_id` or `room_id` is required. If `reservation_id` is ommitted then the main reservation, if it exists, will be used for the token."
                },
                "description": "",
                "tags": [
                    "Touch"
                ]
            }
        },
        "/maintenance/items": {
            "get": {
                "summary": "Get a list of available maintenance items",
                "tags": [
                    "Maintenance"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "translations": {
                                                        "type": "array",
                                                        "description": "List of available translations\n\n| Code   | Language           |\n|--------|--------------------|\n| en     | English (UK)       |\n| de     | German             |\n| es     | Spanish            |\n| fr     | French             |\n| en-US  | English (US)       | \n| ar     | Arabic             |\n| zh-CN  | Simplified Chinese |\n| ru     | Russian            |\n| pt     | Portugese          |\n| ja     | Japanese           |",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "locale": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "en",
                                                                        "de",
                                                                        "es",
                                                                        "fr",
                                                                        "en-US",
                                                                        "ar",
                                                                        "zh-CN",
                                                                        "ru",
                                                                        "pt",
                                                                        "ja"
                                                                    ]
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "description": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string",
                                                                    "format": "uuid"
                                                                },
                                                                "translations": {
                                                                    "type": "array",
                                                                    "description": "List of available translations\n\n| Code   | Language           |\n|--------|--------------------|\n| en     | English (UK)       |\n| de     | German             |\n| es     | Spanish            |\n| fr     | French             |\n| en-US  | English (US)       | \n| ar     | Arabic             |\n| zh-CN  | Simplified Chinese |\n| ru     | Russian            |\n| pt     | Portugese          |\n| ja     | Japanese           |",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "locale": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "en",
                                                                                    "de",
                                                                                    "es",
                                                                                    "fr",
                                                                                    "en-US",
                                                                                    "ar",
                                                                                    "zh-CN",
                                                                                    "ru",
                                                                                    "pt",
                                                                                    "ja"
                                                                                ]
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-maintenance-items",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    }
                ],
                "description": "`site_id` or `room_id` must be present, `room_id` will take precedence in the lookup."
            },
            "parameters": []
        },
        "/maintenance/requests": {
            "get": {
                "summary": "Get a list of maintenance requests",
                "tags": [
                    "Maintenance"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "cancelled",
                                                                    "complete",
                                                                    "error",
                                                                    "in_progress",
                                                                    "submitted"
                                                                ]
                                                            },
                                                            "created_at": {
                                                                "type": "integer"
                                                            },
                                                            "updated_at": {
                                                                "type": "integer"
                                                            },
                                                            "ownable_type": {
                                                                "type": "string"
                                                            },
                                                            "ownable_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "statuses": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        },
                                                                        "status": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "cancelled",
                                                                                "complete",
                                                                                "error",
                                                                                "in_progress",
                                                                                "submitted"
                                                                            ]
                                                                        },
                                                                        "notes": {
                                                                            "type": "string"
                                                                        },
                                                                        "created_at": {
                                                                            "type": "integer"
                                                                        },
                                                                        "ownable_type": {
                                                                            "type": "string"
                                                                        },
                                                                        "ownable_id": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "group": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "translations": {
                                                                        "type": "array",
                                                                        "description": "List of available translations\n\n| Code   | Language           |\n|--------|--------------------|\n| en     | English (UK)       |\n| de     | German             |\n| es     | Spanish            |\n| fr     | French             |\n| en-US  | English (US)       | \n| ar     | Arabic             |\n| zh-CN  | Simplified Chinese |\n| ru     | Russian            |\n| pt     | Portugese          |\n| ja     | Japanese           |",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "locale": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "en",
                                                                                        "de",
                                                                                        "es",
                                                                                        "fr",
                                                                                        "en-US",
                                                                                        "ar",
                                                                                        "zh-CN",
                                                                                        "ru",
                                                                                        "pt",
                                                                                        "ja"
                                                                                    ]
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "item": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "translations": {
                                                                        "type": "array",
                                                                        "description": "List of available translations\n\n| Code   | Language           |\n|--------|--------------------|\n| en     | English (UK)       |\n| de     | German             |\n| es     | Spanish            |\n| fr     | French             |\n| en-US  | English (US)       | \n| ar     | Arabic             |\n| zh-CN  | Simplified Chinese |\n| ru     | Russian            |\n| pt     | Portugese          |\n| ja     | Japanese           |",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "locale": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "en",
                                                                                        "de",
                                                                                        "es",
                                                                                        "fr",
                                                                                        "en-US",
                                                                                        "ar",
                                                                                        "zh-CN",
                                                                                        "ru",
                                                                                        "pt",
                                                                                        "ja"
                                                                                    ]
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "room_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-maintenance-requests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SiteID"
                    },
                    {
                        "$ref": "#/components/parameters/RoomID"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPage"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationPer"
                    }
                ]
            },
            "post": {
                "summary": "Create a maintenance request",
                "operationId": "post-maintenance-requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "ID of the created maintenance request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "room_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "item_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "room_id",
                                    "item_id"
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "Maintenance"
                ]
            },
            "put": {
                "summary": "Update a maintenance request",
                "operationId": "put-maintenance-requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "ID of the created status"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "ID of the maintenance request to update"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "cancelled",
                                            "complete",
                                            "error",
                                            "in_progress"
                                        ],
                                        "description": "If left blank the previous status will be used"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "request_id"
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "Maintenance"
                ]
            },
            "parameters": []
        },
        "/wifi/tariffs": {
            "get": {
                "summary": "Get the available tariffs",
                "tags": [
                    "WiFi"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "number"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-tariffs",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "company_id",
                        "description": "Company ID. Defaults to the user company ID"
                    }
                ]
            },
            "parameters": []
        },
        "/wifi/vouchers": {
            "post": {
                "summary": "Generate vouchers",
                "operationId": "post-wifi-vouchers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number"
                                                    },
                                                    "expires_at": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tariff_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "default": 1,
                                        "minimum": 1,
                                        "maximum": 200,
                                        "description": "How many vouchers should be created"
                                    },
                                    "expires_in": {
                                        "type": "integer",
                                        "default": 1,
                                        "description": "How many days before the voucher expires",
                                        "minimum": 1
                                    }
                                },
                                "required": [
                                    "tariff_id",
                                    "count"
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "WiFi"
                ]
            }
        },
        "/account-profiles": {
            "get": {
                "summary": "Get a list of available account profiles",
                "tags": [
                    "Reservations"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "company_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "company_id"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "get-account-profiles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyID"
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "NotFound": {
                "description": "Response when resource could not be found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NotFoundError"
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "type": "Not Found",
                                    "message": "Failed to find resource",
                                    "status": 404
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Response returned when there is a general server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InternalServerError"
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "type": "Internal Server Error",
                                    "message": "Something went wrong",
                                    "status": 500
                                }
                            }
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Response returned when request is made which doesn't have the correct access rights",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ForbiddenError"
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "type": "Forbidden",
                                    "message": "Access denied to resource",
                                    "status": 403
                                }
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Response to unauthorised access due to no token being present or the token having expired.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnauthorisedError"
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "type": "Unauthorized",
                                    "message": "You are not authorised to access this resource, token missing or expired",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            },
            "UnprocessableEntity": {
                "description": "Response when an error occurs whilst creating/updating records. Record errors will be shown in the errors field of the response object",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnproccessableEntityError"
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "type": "Unprocessable Entity",
                                    "message": "Error creating reservation",
                                    "status": 422,
                                    "errors": [
                                        {
                                            "field": "guest_first_name",
                                            "messages": [
                                                "must exist"
                                            ]
                                        },
                                        {
                                            "field": "guest_last_name",
                                            "messages": [
                                                "must exist"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "PaginationPage": {
                "schema": {
                    "type": "integer",
                    "example": 2
                },
                "in": "query",
                "name": "page",
                "description": "Required page number in paginated results"
            },
            "PaginationPer": {
                "schema": {
                    "type": "integer",
                    "default": 25,
                    "minimum": 25,
                    "maximum": 200
                },
                "in": "query",
                "name": "per_page",
                "description": "Number of results per page"
            },
            "SiteID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "site_id",
                "description": "May be ignored depending on user access rights, for example if the user only has access to a single site that sites' ID will be used"
            },
            "ReceiverID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "receiver_id",
                "description": "The receiver ID",
                "required": true
            },
            "RoomNameEq": {
                "schema": {
                    "type": "string",
                    "example": "237"
                },
                "in": "query",
                "name": "room_name_eq",
                "description": "The room name matches the value exactly"
            },
            "RoomNameCont": {
                "schema": {
                    "type": "string",
                    "example": "Lou"
                },
                "in": "query",
                "name": "room_name_cont",
                "description": "The room name contains the value"
            },
            "GuestFirstNameEq": {
                "schema": {
                    "type": "string",
                    "example": "Bob"
                },
                "in": "query",
                "name": "guest_first_name_eq",
                "description": "The guests first name matches the value exactly"
            },
            "GuestFirstNameCont": {
                "schema": {
                    "type": "string",
                    "example": "Tre"
                },
                "in": "query",
                "name": "guest_first_name_cont",
                "description": "The guests first name contains the value"
            },
            "GuestLastNameEq": {
                "schema": {
                    "type": "string",
                    "example": "Hope"
                },
                "in": "query",
                "name": "guest_last_name_eq",
                "description": "The guests last name matches the value exactly"
            },
            "GuestLastNameCont": {
                "schema": {
                    "type": "string",
                    "example": "Hop"
                },
                "in": "query",
                "name": "guest_last_name_cont",
                "description": "The guests last name contains the value"
            },
            "RoomID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "room_id",
                "description": "The room ID"
            },
            "GuestID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "guest_id",
                "description": "The guest ID"
            },
            "ReservationID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "reservation_id",
                "description": "The reservation ID"
            },
            "CompanyID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "company_id",
                "description": "The company ID"
            },
            "ChromecastID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "query",
                "name": "chromecast_id",
                "description": "The chromecast ID"
            },
            "UUID_ID": {
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "in": "path",
                "name": "id",
                "description": "The ID of the resource",
                "required": true
            },
            "IntegerID": {
                "schema": {
                    "type": "integer"
                },
                "in": "path",
                "name": "id",
                "description": "The ID of the resource",
                "required": true,
                "example": 22
            },
            "PMSID": {
                "name": "pms_id",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9 -_]+$"
                },
                "description": "ID assigned by the PMS"
            },
            "PMSIDs": {
                "name": "pms_ids",
                "in": "query",
                "schema": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9 -_]+(, *[A-Za-z0-9 -_]+)*$"
                },
                "description": "Comma separated list of PMS IDs"
            },
            "RoomIDs": {
                "name": "room_ids",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}(, *[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12})*"
                },
                "description": "Comma separated list of Room IDs"
            },
            "GuestIDs": {
                "name": "guest_ids",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}(, *[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12})*"
                },
                "description": "Comma separated list of Guest IDs"
            },
            "ChromecastIDs": {
                "name": "chromecast_ids",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}(, *[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12})*"
                },
                "description": "Comma separated list of Chromecast IDs"
            },
            "ReservationNumber": {
                "name": "reservation_number",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9 -_]+$"
                },
                "description": "Reservation number usually assigned by the PMS"
            },
            "ReceiverIDs": {
                "name": "receiver_ids",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}(, *[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12})*"
                },
                "description": "Comma separated list of receiver IDs"
            },
            "CompanyIDs": {
                "name": "company_ids",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12}(, *[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{4}\\\\-[0-9a-fA-F]{12})*"
                },
                "description": "Comma separated list of company IDs"
            }
        },
        "schemas": {
            "Reservation": {
                "title": "Reservation",
                "description": "Full reservation information",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The guest ID"
                            },
                            "posting_allowed": {
                                "type": "boolean",
                                "description": "Can the guest make purchases such as room service, buy movies etc"
                            },
                            "sharer": {
                                "type": "boolean"
                            },
                            "group_number": {
                                "type": "string"
                            },
                            "guest": {
                                "$ref": "#/components/schemas/IncludedGuest"
                            },
                            "room": {
                                "$ref": "#/components/schemas/IncludedRoom"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2015-09-04T08:26:10.534Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2015-09-04T08:26:10.534Z"
                            },
                            "reservation_number": {
                                "type": "string",
                                "description": "Assigned by the PMS (if there is one) or used to identify the reservation between systems",
                                "example": "123456789",
                                "pattern": "^[A-Za-z0-9 -_]+$"
                            },
                            "site_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The ID of the site the reservation is associated with"
                            },
                            "account_profile_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The account profile ID the reservation is associated with"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    },
                    {
                        "$ref": "#/components/schemas/TVRights"
                    },
                    {
                        "$ref": "#/components/schemas/MinibarRights"
                    }
                ]
            },
            "User": {
                "title": "User",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "partner_account_id": {
                        "type": "string"
                    },
                    "company_id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "helpdesk": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "access_key": {
                                "type": "string"
                            }
                        }
                    },
                    "roles": {
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "partner_account_id",
                    "company_id",
                    "token"
                ]
            },
            "Guest": {
                "title": "Guest",
                "description": "Full guest response",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "first_name": {
                                "type": "string",
                                "description": "The guests given name",
                                "example": "Cedric"
                            },
                            "last_name": {
                                "type": "string",
                                "description": "The guests family name",
                                "example": "Smythington"
                            },
                            "title": {
                                "type": "string",
                                "description": "The guests title",
                                "example": "Mr"
                            },
                            "pms_id": {
                                "type": "string",
                                "description": "Identifier assigned by the PMS (if there is one) or used to identify the guest between systems"
                            },
                            "vip": {
                                "type": "boolean",
                                "description": "Does the guest have VIP status?"
                            },
                            "company_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Guests are scoped to a company rather than a site"
                            },
                            "created_at": {
                                "type": "integer",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "integer",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "id",
                            "first_name",
                            "last_name",
                            "company_id",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    {
                        "$ref": "#/components/schemas/SupportedLocales"
                    }
                ]
            },
            "PartnerAccount": {
                "title": "PartnerAccount",
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "Awesome partner 22"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    },
                    "topic_arn": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "Contact": {
                "title": "Contact",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Cedric Smythington"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "contact_type": {
                        "type": "string",
                        "example": "Director"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam consequat venenatis metus nec fermentum."
                    },
                    "phone": {
                        "type": "string",
                        "example": "01234 567 899"
                    }
                }
            },
            "Company": {
                "title": "Company",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    },
                    "partner_account_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "address_1": {
                        "type": "string"
                    },
                    "address_2": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "topic_arn": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Room": {
                "title": "Room",
                "x-examples": {
                    "Example": {
                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                        "name": "101",
                        "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                        "status": "Dirty/Occupied"
                    }
                },
                "description": "Full room information",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The room ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "The room name",
                                "example": "237"
                            },
                            "site_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the site the room is associated with"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "site_id"
                        ]
                    },
                    {
                        "$ref": "#/components/schemas/RoomStatus"
                    }
                ]
            },
            "Site": {
                "title": "Site",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "Overlook"
                    },
                    "partner_account_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "topic_arn": {
                        "type": "string"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                }
            },
            "InternalServerError": {
                "title": "Internal Server Error",
                "type": "object",
                "description": "Response sent when something unexpected happens while processing the request",
                "x-examples": {
                    "Error": {
                        "type": "Internal Server Error",
                        "message": "Something went wrong",
                        "status": 500
                    }
                },
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "Internal Server Error"
                    },
                    "message": {
                        "type": "string",
                        "default": "Something went wrong"
                    },
                    "status": {
                        "type": "integer",
                        "default": 500
                    }
                }
            },
            "UnproccessableEntityError": {
                "title": "Unproccessable Entity",
                "type": "object",
                "description": "Response when an error occurs whilst creating/updating records. Record errors will be shown in the errors field of the response object",
                "x-examples": {
                    "Example": {
                        "type": "Unprocessable Entity",
                        "message": "Error creating reservation",
                        "status": 422,
                        "errors": [
                            {
                                "field": "guest_first_name",
                                "messages": [
                                    "must exist"
                                ]
                            },
                            {
                                "field": "guest_last_name",
                                "messages": [
                                    "must exist"
                                ]
                            }
                        ]
                    }
                },
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "Unprocessable Entity"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "default": 422
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "messages": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "type",
                    "message",
                    "status"
                ]
            },
            "ReservationForm": {
                "title": "ReservationForm",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "first_name": {
                                "type": "string",
                                "example": "Bob",
                                "description": "The guests given name"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Hope",
                                "description": "The guests family name"
                            },
                            "title": {
                                "type": "string",
                                "example": "Miss",
                                "description": "The guests title"
                            },
                            "room_id": {
                                "type": "string",
                                "description": "The room ID",
                                "example": "75fe390b-e008-4283-b4e6-c8d33a91347f",
                                "format": "uuid"
                            },
                            "posting_allowed": {
                                "type": "boolean",
                                "description": "Can the guest make purchases such as room service, buy movies etc",
                                "example": true
                            },
                            "sharer": {
                                "type": "boolean",
                                "example": true
                            },
                            "group_number": {
                                "type": "string"
                            },
                            "guest_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The guest ID"
                            },
                            "pms_id": {
                                "type": "string",
                                "description": "Identifier assigned to the guest by the PMS (if there is one) or used to identify the guest between systems"
                            },
                            "vip": {
                                "type": "boolean",
                                "example": true,
                                "description": "Does the guest have VIP status?"
                            },
                            "reservation_number": {
                                "type": "string",
                                "description": "Assigned by the PMS (if there is one) or used to identify the reservation between systems",
                                "example": "123456789",
                                "pattern": "^[A-Za-z0-9 -_]+$"
                            },
                            "account_profile_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Associate an account profile with this reservation"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/SupportedLocales"
                    },
                    {
                        "$ref": "#/components/schemas/TVRights"
                    },
                    {
                        "$ref": "#/components/schemas/MinibarRights"
                    }
                ]
            },
            "RoomWithDevices": {
                "title": "RoomWithDevices",
                "description": "Room information with associated devices",
                "x-examples": {
                    "Example": {
                        "id": "80880675-97af-43fe-a8e6-7cf84ce09f33",
                        "name": "101",
                        "site_id": "9a91c5ca-e163-4664-aded-d76429646f1d",
                        "status": "Dirty/Occupied",
                        "chromecasts": [
                            {
                                "id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                "mac": "00:11:22:33:44:55",
                                "ip": "192.168.1.1",
                                "wifi": {
                                    "noise": -86,
                                    "signal": -62,
                                    "snr": 26,
                                    "hotspot_bssid": "55:44:33:22:11:00",
                                    "ssid": "Floor 2"
                                },
                                "app": {
                                    "display_name": "Nevaya Cast",
                                    "status_text": "Nevaya Cast",
                                    "id": "2E79930D",
                                    "idle_screen": false,
                                    "started_at": "2020-08-24T14:38:43.835Z"
                                },
                                "timestamp": "2020-08-24T16:22:42.156Z"
                            }
                        ],
                        "receivers": [
                            {
                                "id": "0faf7d86-b21c-4038-aa02-1b89124c09b3",
                                "mac": "00:11:22:33:44:55",
                                "ip": "192.168.1.1",
                                "status": {
                                    "volume": 12,
                                    "mute": false,
                                    "power": "on",
                                    "mode": "external",
                                    "id": "hdmi1",
                                    "name": "Playstation",
                                    "timestamp": "2020-08-24T16:22:42.156Z"
                                }
                            }
                        ],
                        "created_at": 1603138915,
                        "updated_at": 1603138915
                    }
                },
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The room ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "The room name",
                                "example": "237"
                            },
                            "site_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The ID of the site the room is associated with"
                            },
                            "created_at": {
                                "type": "integer",
                                "description": "Unix timestamp"
                            },
                            "updated_at": {
                                "type": "integer",
                                "description": "Unix timestamp"
                            },
                            "receivers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Receiver"
                                }
                            },
                            "chromecasts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Chromecast"
                                }
                            },
                            "room_tags": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RoomTag"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/RoomStatus"
                    }
                ]
            },
            "Receiver": {
                "title": "Receiver",
                "description": "",
                "x-tags": [
                    "TV"
                ],
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "ip": {
                                "type": "string",
                                "format": "ipv4"
                            },
                            "state": {
                                "type": "object",
                                "properties": {
                                    "volume": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 100,
                                        "example": 22
                                    },
                                    "mute": {
                                        "type": "boolean"
                                    },
                                    "power": {
                                        "type": "string",
                                        "enum": [
                                            "on",
                                            "off"
                                        ],
                                        "example": "on"
                                    },
                                    "timestamp": {
                                        "type": "integer",
                                        "description": "Unix timestamp"
                                    },
                                    "error": {
                                        "type": "string",
                                        "enum": [
                                            "offline",
                                            "no_info"
                                        ],
                                        "description": "`offline`: TV is considered offline\n\n`no_info`: No state information found "
                                    },
                                    "player": {
                                        "type": "object",
                                        "properties": {
                                            "mode": {
                                                "type": "string",
                                                "enum": [
                                                    "tv",
                                                    "external",
                                                    "movie",
                                                    "site_video",
                                                    "application"
                                                ],
                                                "example": "movie"
                                            },
                                            "state": {
                                                "type": "string",
                                                "enum": [
                                                    "starting",
                                                    "stopping",
                                                    "playing",
                                                    "paused",
                                                    "seeking"
                                                ],
                                                "description": "Only available when mode is 'movie'",
                                                "example": "playing"
                                            },
                                            "id": {
                                                "description": "ID of the current playing item, i.e the channel ID, the external source etc",
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the current playing item, e.g. for a channel then `BBC One` could be returned, for an external source `Playstation` etc",
                                                "example": "Ready Player One"
                                            },
                                            "position": {
                                                "type": "integer",
                                                "description": "Only available when mode is 'movie'",
                                                "example": 958000
                                            }
                                        }
                                    }
                                }
                            },
                            "dev": {
                                "type": "boolean",
                                "description": "Is the receiver in development mode. In development mode movies are not charged"
                            },
                            "vod_accessible": {
                                "type": "boolean",
                                "description": "Are movies enabled for this receiver"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/MACAddress"
                    }
                ]
            },
            "Chromecast": {
                "title": "Chromecast",
                "description": "Chromecast information including the current WiFi status and the application in use.",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "ip": {
                                "type": "string",
                                "format": "ipv4",
                                "example": "192.168.1.1"
                            },
                            "enabled": {
                                "type": "boolean",
                                "description": "Is the chromecast enabled"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "state": {
                                "type": "object",
                                "properties": {
                                    "wifi": {
                                        "type": "object",
                                        "properties": {
                                            "hotspot_bssid": {
                                                "type": "string",
                                                "example": "55:44:33:22:11:00"
                                            },
                                            "noise": {
                                                "type": "integer",
                                                "example": -86
                                            },
                                            "signal": {
                                                "type": "integer",
                                                "example": -62
                                            },
                                            "ssid": {
                                                "type": "string",
                                                "example": "Floor 2"
                                            },
                                            "snr": {
                                                "type": "integer",
                                                "example": 26
                                            }
                                        }
                                    },
                                    "app": {
                                        "type": "object",
                                        "properties": {
                                            "display_name": {
                                                "type": "string",
                                                "example": "Nevaya Cast"
                                            },
                                            "status_text": {
                                                "type": "string",
                                                "example": "Nevaya Cast"
                                            },
                                            "idle_screen": {
                                                "type": "boolean",
                                                "description": "Is the chromecast showing the default Google screen"
                                            },
                                            "started_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "When the application launched"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "The Google ID for the current application"
                                            }
                                        }
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the WiFi and app information were last updated"
                                    },
                                    "failed_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "If there was an issue retreiving the state this is the date and time that it happened"
                                    },
                                    "failure_reason": {
                                        "type": "string",
                                        "description": "The reason retrieving the state failed",
                                        "example": "connect EHOSTUNREACH 192.168.111.133:8008"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/MACAddress"
                    }
                ]
            },
            "UnauthorisedError": {
                "type": "object",
                "description": "Response to unauthorised access due to no token being present or the token having expired.",
                "x-examples": {
                    "Example": {
                        "type": "Unauthorized",
                        "message": "You are not authorised to access this resource, token missing or expired",
                        "status": 401
                    }
                },
                "title": "Unauthorized",
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "Unauthorized"
                    },
                    "status": {
                        "type": "integer",
                        "default": 401
                    },
                    "message": {
                        "type": "string",
                        "default": "You are not authorised to access this resource, token missing or expired"
                    }
                },
                "required": [
                    "type",
                    "status",
                    "message"
                ]
            },
            "ForbiddenError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "Forbidden"
                    },
                    "message": {
                        "type": "string",
                        "default": "Access denied to resource"
                    },
                    "status": {
                        "type": "integer",
                        "default": 403
                    }
                },
                "required": [
                    "type",
                    "message",
                    "status"
                ],
                "x-examples": {
                    "Example": {
                        "type": "Forbidden",
                        "message": "Access denied to resource",
                        "status": 403
                    }
                },
                "description": "Response returned when request is made which doesn't have the correct access rights",
                "title": "Forbidden"
            },
            "NotFoundError": {
                "title": "Not Found",
                "type": "object",
                "description": "Response when resource could not be found",
                "x-examples": {
                    "Example": {
                        "type": "Not Found",
                        "message": "Failed to find resource",
                        "status": 404
                    }
                },
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "Not Found"
                    },
                    "message": {
                        "type": "string",
                        "default": "Failed to find resource"
                    },
                    "status": {
                        "type": "integer",
                        "default": 404
                    }
                },
                "required": [
                    "type",
                    "message",
                    "status"
                ]
            },
            "IncludedRoom": {
                "title": "IncludedRoom",
                "type": "object",
                "description": "Information for the room when included as part of reservation model etc",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The room ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The room name",
                        "example": "237"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Dirty/Vacant",
                            "Dirty/Occupied",
                            "Clean/Vacant",
                            "Clean/Occupied",
                            "Inspected/Vacant",
                            "Inspected/Occupied"
                        ],
                        "example": "Clean/Occupied",
                        "description": "The current housekeeping status of the room"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "IncludedGuest": {
                "title": "IncludedGuest",
                "description": "Information for the guest when included as part of reservation model etc",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "first_name": {
                                "type": "string",
                                "description": "The guests given name",
                                "example": "Cedric"
                            },
                            "last_name": {
                                "type": "string",
                                "description": "The guests family name",
                                "example": "Smythington"
                            },
                            "title": {
                                "type": "string",
                                "description": "The guests title",
                                "example": "Mr"
                            },
                            "pms_id": {
                                "type": "string",
                                "description": "Identifier assigned by the PMS (if there is one) or used to identify the guest between systems",
                                "example": "123456789"
                            },
                            "vip": {
                                "type": "boolean",
                                "description": "Does the guest have VIP status?"
                            }
                        },
                        "required": [
                            "id",
                            "first_name",
                            "last_name"
                        ]
                    },
                    {
                        "$ref": "#/components/schemas/SupportedLocales"
                    }
                ]
            },
            "AllWeather": {
                "title": "AllWeather",
                "type": "object",
                "description": "See https://openweathermap.org/api/one-call-api",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "Timezone name for the requested location",
                        "example": "Europe/London"
                    },
                    "timezone_offset": {
                        "type": "integer",
                        "description": "Shift in seconds from UTC",
                        "example": 3600
                    },
                    "current": {
                        "type": "object",
                        "properties": {
                            "dt": {
                                "type": "integer",
                                "description": "Current time, Unix, UTC",
                                "example": 1599519049
                            },
                            "sunrise": {
                                "type": "integer",
                                "description": "Sunrise time, Unix, UTC",
                                "example": 1599456534
                            },
                            "sunset": {
                                "type": "integer",
                                "description": "Sunset time, Unix, UTC",
                                "example": 1599504002
                            },
                            "temp": {
                                "type": "number",
                                "description": "Temperature, in Kelvin",
                                "example": 289.03
                            },
                            "feels_like": {
                                "type": "number",
                                "description": "This temperature parameter accounts for the human perception of weather, in Kelvin",
                                "example": 287.68
                            },
                            "pressure": {
                                "type": "number",
                                "description": "Atmospheric pressure on the sea level, hPa",
                                "example": 1023
                            },
                            "humidity": {
                                "type": "number",
                                "description": "Humidity, %",
                                "example": 87
                            },
                            "dew_point": {
                                "type": "number",
                                "description": "Atmospheric temperature (varying according to pressure and humidity) below which water droplets begin to condense and dew can form, in Kelvin",
                                "example": 286.87
                            },
                            "uvi": {
                                "type": "number",
                                "description": "Midday UV index",
                                "example": 4.78
                            },
                            "clouds": {
                                "type": "number",
                                "description": "Cloudiness, %",
                                "example": 75
                            },
                            "visibility": {
                                "type": "number",
                                "description": "Average visibility, in metres",
                                "example": 1000
                            },
                            "wind_speed": {
                                "type": "number",
                                "description": "Wind speed, in m/s",
                                "example": 3.6
                            },
                            "wind_deg": {
                                "type": "number",
                                "description": "Wind direction, in degrees (meteorological)",
                                "example": 250
                            },
                            "weather": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Weather condition id",
                                        "example": 803
                                    },
                                    "main": {
                                        "type": "string",
                                        "description": "Group of weather parameters (Rain, Snow, Extreme etc.)",
                                        "example": "Clouds"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Weather condition within the group",
                                        "example": "broken clouds"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "description": "Weather icon ID",
                                        "example": "04n"
                                    }
                                }
                            },
                            "icon": {
                                "type": "integer",
                                "description": "Internal",
                                "example": 26
                            }
                        }
                    },
                    "hourly": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dt": {
                                    "type": "integer",
                                    "description": "Time of the forecasted data, Unix, UTC",
                                    "example": 1599516000
                                },
                                "temp": {
                                    "type": "number",
                                    "description": "Temperature, in Kelvin",
                                    "example": 289.3
                                },
                                "feels_like": {
                                    "type": "number",
                                    "description": "This temperature parameter accounts for the human perception of weather, in Kelvin",
                                    "example": 289.3
                                },
                                "pressure": {
                                    "type": "number",
                                    "description": "Atmospheric pressure on the sea level, hPa",
                                    "example": 1023
                                },
                                "humidity": {
                                    "type": "number",
                                    "description": "Humidity, %",
                                    "example": 87
                                },
                                "dew_point": {
                                    "type": "number",
                                    "description": "Atmospheric temperature (varying according to pressure and humidity) below which water droplets begin to condense and dew can form, in Kelvin",
                                    "example": 286.87
                                },
                                "clouds": {
                                    "type": "number",
                                    "description": "Cloudiness, %",
                                    "example": 75
                                },
                                "visibility": {
                                    "type": "number",
                                    "description": "Average visibility, in metres",
                                    "example": 10000
                                },
                                "wind_speed": {
                                    "type": "number",
                                    "description": "Wind speed, in m/s",
                                    "example": 4.73
                                },
                                "wind_deg": {
                                    "type": "number",
                                    "description": "Wind direction, in degrees (meteorological)",
                                    "example": 260
                                },
                                "weather": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "Weather condition id",
                                            "example": 803
                                        },
                                        "main": {
                                            "type": "string",
                                            "description": "Group of weather parameters (Rain, Snow, Extreme etc.)",
                                            "example": "Clouds"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Weather condition within the group",
                                            "example": "broken clouds"
                                        },
                                        "icon": {
                                            "type": "string",
                                            "description": "Weather icon ID",
                                            "example": "04n"
                                        }
                                    }
                                },
                                "pop": {
                                    "type": "number",
                                    "description": "Probability of precipitation",
                                    "example": 0
                                },
                                "icon": {
                                    "type": "integer",
                                    "description": "Internal",
                                    "example": 26
                                },
                                "rain": {
                                    "type": "object",
                                    "properties": {
                                        "1h": {
                                            "type": "number",
                                            "description": "Rain volume for last hour, mm",
                                            "example": 0
                                        }
                                    }
                                },
                                "snow": {
                                    "type": "object",
                                    "properties": {
                                        "1h": {
                                            "type": "number",
                                            "description": "Snow volume for last hour, mm",
                                            "example": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "daily": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dt": {
                                    "type": "integer",
                                    "description": "Time of the forecasted data, Unix, UTC",
                                    "example": 1599570000
                                },
                                "sunrise": {
                                    "type": "integer",
                                    "description": "Sunrise time, Unix, UTC",
                                    "example": 1599570000
                                },
                                "sunset": {
                                    "type": "integer",
                                    "description": "Sunset time, Unix, UTC",
                                    "example": 1599570000
                                },
                                "temp": {
                                    "type": "object",
                                    "properties": {
                                        "day": {
                                            "type": "number",
                                            "description": "Day temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "min": {
                                            "type": "number",
                                            "description": "Minimum temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "max": {
                                            "type": "number",
                                            "description": "Maximum temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "night": {
                                            "type": "number",
                                            "description": "Night temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "eve": {
                                            "type": "number",
                                            "description": "Evening temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "morn": {
                                            "type": "number",
                                            "description": "Morning temperature, in Kelvin",
                                            "example": 294.16
                                        }
                                    }
                                },
                                "feels_like": {
                                    "type": "object",
                                    "description": "This temperature parameter accounts for the human perception of weather, in Kelvin",
                                    "properties": {
                                        "day": {
                                            "type": "number",
                                            "description": "Day temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "night": {
                                            "type": "number",
                                            "description": "Night temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "eve": {
                                            "type": "number",
                                            "description": "Evening temperature, in Kelvin",
                                            "example": 294.16
                                        },
                                        "morn": {
                                            "type": "number",
                                            "description": "Morning temperature, in Kelvin",
                                            "example": 294.16
                                        }
                                    }
                                },
                                "pressure": {
                                    "type": "number",
                                    "description": "Atmospheric pressure on the sea level, hPa",
                                    "example": 1024
                                },
                                "humidity": {
                                    "type": "number",
                                    "description": "Humidity, %",
                                    "example": 80
                                },
                                "dew_point": {
                                    "type": "number",
                                    "description": "Atmospheric temperature (varying according to pressure and humidity) below which water droplets begin to condense and dew can form, in Kelvin",
                                    "example": 294.16
                                },
                                "wind_speed": {
                                    "type": "number",
                                    "description": "Wind speed, in m/s",
                                    "example": 3.2
                                },
                                "wind_deg": {
                                    "type": "number",
                                    "description": "Wind direction, in degrees (meteorological)",
                                    "example": 120
                                },
                                "weather": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "description": "Weather condition id",
                                            "example": 803
                                        },
                                        "main": {
                                            "type": "string",
                                            "description": "Group of weather parameters (Rain, Snow, Extreme etc.)",
                                            "example": "Clouds"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Weather condition within the group",
                                            "example": "broken clouds"
                                        },
                                        "icon": {
                                            "type": "string",
                                            "description": "Weather icon ID",
                                            "example": "04n"
                                        }
                                    }
                                },
                                "clouds": {
                                    "type": "number",
                                    "description": "Cloudiness, %",
                                    "example": 81
                                },
                                "pop": {
                                    "type": "number",
                                    "description": "Probability of precipitation",
                                    "example": 0.15
                                },
                                "uvi": {
                                    "type": "number",
                                    "description": "Midday UV index",
                                    "example": 3.74
                                },
                                "icon": {
                                    "type": "integer",
                                    "description": "Internal",
                                    "example": 26
                                },
                                "rain": {
                                    "type": "number",
                                    "description": "Rain volume, in mm",
                                    "example": 0
                                },
                                "snow": {
                                    "type": "number",
                                    "description": "Snow volume, in mm",
                                    "example": 0
                                }
                            }
                        }
                    }
                }
            },
            "Channel": {
                "title": "Channel",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "BBC One"
                    },
                    "hd": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "example": "Donec commodo tincidunt lectus, a malesuada arcu."
                    },
                    "logo": {
                        "type": "string",
                        "description": "Link to the channel logo, fixed size of 160pm x 160px",
                        "format": "uri"
                    },
                    "audio_only": {
                        "type": "boolean",
                        "description": "Channel only has audio and no video, a radio channel for example"
                    },
                    "category_ids": {
                        "type": "array",
                        "description": "The IDs of the categories the channel is associated with",
                        "example": [
                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                        ],
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "epg_id": {
                        "type": "string",
                        "description": "ID to use when retrieving EPG information for the channel",
                        "example": "7889"
                    }
                }
            },
            "ChannelCategory": {
                "title": "ChannelCategory",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "Entertainment"
                    },
                    "description": {
                        "type": "string",
                        "example": "Donec commodo tincidunt lectus, a malesuada arcu."
                    },
                    "channel_ids": {
                        "type": "array",
                        "description": "Array of channel IDs associated with this category",
                        "example": [
                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                        ],
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "EPGProgramme": {
                "title": "EPGProgramme",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "The programme name",
                        "example": "BBC News"
                    },
                    "starts_at": {
                        "type": "integer",
                        "example": 1599642000000,
                        "description": "When the programme starts, Unix UTC"
                    },
                    "ends_at": {
                        "type": "integer",
                        "example": 1599646500000,
                        "description": "When the programme ends, Unix UTC"
                    },
                    "description": {
                        "type": "string",
                        "description": "Programme description",
                        "example": "Twenty-four hours a day, the latest national and international stories as they break. Also in HD. [S]"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "description": "The programme image"
                    }
                }
            },
            "MoviesResponse": {
                "title": "MoviesResponse",
                "type": "object",
                "properties": {
                    "movies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Movie"
                        }
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MovieGenre"
                        }
                    },
                    "sub_genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MovieSubGenre"
                        }
                    }
                }
            },
            "Movie": {
                "title": "Movie",
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "Ready Player One"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2018
                    },
                    "hd": {
                        "type": "boolean",
                        "example": true
                    },
                    "adult": {
                        "type": "boolean",
                        "example": false
                    },
                    "valid_for": {
                        "type": "integer",
                        "description": "How many hours after purchase can a movie be watched for",
                        "example": 24
                    },
                    "movie_languages": {
                        "type": "array",
                        "description": "List of available audio languages for the movie:\n\n| Code   | Language     |                                  |\n|--------|--------------|----------------------------------|\n| en | English      |                                  |\n| fr | Français     |                                  |\n| es | Español      |                                  |\n| de | Deutsch      |                                  |\n| it | Italiano     |                                  |\n| un | Undetermined | _Generally this will be English_ |\n| nl | Nederlands   |                                  |",
                        "items": {
                            "type": "object",
                            "properties": {
                                "locale": {
                                    "type": "string",
                                    "example": "en",
                                    "enum": [
                                        "en",
                                        "de",
                                        "fr",
                                        "es",
                                        "it",
                                        "un",
                                        "nl"
                                    ]
                                },
                                "name": {
                                    "type": "string",
                                    "example": "English"
                                }
                            }
                        }
                    },
                    "tmdb_id": {
                        "type": "string",
                        "description": "ID to be used with https://www.themoviedb.org/",
                        "example": "333339"
                    },
                    "short_description": {
                        "type": "string",
                        "example": "When the creator of a virtual reality world called the OASIS dies, he releases a video in which he challenges all OASIS users to find his Easter Egg, which will give the finder his fortune."
                    },
                    "description": {
                        "type": "string",
                        "example": "When the creator of a virtual reality world called the OASIS dies, he releases a video in which he challenges all OASIS users to find his Easter Egg, which will give the finder his fortune."
                    },
                    "genres": {
                        "type": "string",
                        "description": "List of genres for display purposes",
                        "example": "Action, Adventure, and Sci-Fi"
                    },
                    "sub_genres": {
                        "type": "string",
                        "description": "List of sub genres for display purposes",
                        "example": "Action, Adventure, and Sci-Fi"
                    },
                    "directors": {
                        "type": "string",
                        "example": "Steven Spielberg",
                        "description": "List of directors' names"
                    },
                    "actors": {
                        "type": "string",
                        "example": "Ben Mendelsohn, Olivia Cooke, and Tye Sheridan",
                        "description": "List of actors' names"
                    },
                    "audio_languages": {
                        "type": "string",
                        "example": "English, Espaniol and Deutsch",
                        "description": "Audio languages available"
                    },
                    "rating": {
                        "type": "string",
                        "enum": [
                            "12A",
                            "U",
                            "PG",
                            "15",
                            "18",
                            "R18",
                            "12"
                        ],
                        "example": "12A",
                        "description": "BBFC rating"
                    },
                    "runtime": {
                        "type": "integer",
                        "description": "Movie runtime in minutes",
                        "example": 86
                    },
                    "price": {
                        "type": "integer",
                        "description": "Movie price in pence",
                        "example": 999
                    },
                    "images": {
                        "type": "object",
                        "properties": {
                            "thumb": {
                                "type": "string",
                                "description": "160px x 240px cover image",
                                "format": "uri"
                            },
                            "main": {
                                "type": "string",
                                "description": "320px x 480px cover image",
                                "format": "uri"
                            },
                            "backdrop": {
                                "type": "string",
                                "description": "1280px x 720px background image",
                                "format": "uri"
                            }
                        }
                    },
                    "genre_ids": {
                        "type": "array",
                        "example": [
                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                        ],
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "sub_genre_ids": {
                        "type": "array",
                        "example": [
                            47,
                            22
                        ],
                        "items": {
                            "type": "integer"
                        }
                    },
                    "dvd_release_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2019-09-16",
                        "description": "Date the movie was released on DVD"
                    },
                    "valid_to": {
                        "type": "string",
                        "format": "date-time",
                        "description": "If present, indicates the movie has been purchased and when access ends"
                    }
                }
            },
            "MovieGenre": {
                "title": "MovieGenre",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "Horror"
                    },
                    "movie_ids": {
                        "type": "array",
                        "example": [
                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                        ],
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "sub_genre_ids": {
                        "type": "array",
                        "example": [
                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                        ],
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "MovieSubGenre": {
                "title": "MovieSubGenre",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "Action"
                    },
                    "movie_ids": {
                        "type": "array",
                        "example": [
                            "56acd06b-dfe9-4ea9-92ae-5d97c8ab1952",
                            "8864c243-07d0-44b2-ad45-8eb89095320a"
                        ],
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "Video": {
                "title": "Video",
                "type": "object",
                "description": "Unencrypted HLS stream",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string",
                        "example": "Phasellus at tellus ut nibh congue imperdiet et ac dui"
                    },
                    "name": {
                        "type": "string",
                        "example": "Mood video 1"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "CurrentWeather": {
                "title": "CurrentWeather",
                "type": "object",
                "description": "See https://openweathermap.org/current#parameter",
                "properties": {
                    "sunrise": {
                        "type": "integer",
                        "example": 1599456534,
                        "description": "Sunrise time, unix, UTC"
                    },
                    "sunset": {
                        "type": "integer",
                        "example": 1599504002,
                        "description": "Sunset time, unix, UTC"
                    },
                    "icon": {
                        "type": "string",
                        "example": "26",
                        "description": "Internal"
                    },
                    "weather": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 803,
                                "description": "Weather condition id"
                            },
                            "main": {
                                "type": "string",
                                "example": "Clouds",
                                "description": "Group of weather parameters (Rain, Snow, Extreme etc.)"
                            },
                            "description": {
                                "type": "string",
                                "example": "broken clouds",
                                "description": "Weather condition within the group"
                            },
                            "icon": {
                                "type": "string",
                                "example": "04n",
                                "description": "Weather icon ID"
                            }
                        }
                    },
                    "main": {
                        "type": "object",
                        "properties": {
                            "temp": {
                                "type": "number",
                                "example": 289.03,
                                "description": "Temperature, in Kelvin"
                            },
                            "feels_like": {
                                "type": "number",
                                "example": 287.68,
                                "description": "Temperature. This temperature parameter accounts for the human perception of weather, in Kelvin"
                            },
                            "temp_min": {
                                "type": "number",
                                "example": 288.71,
                                "description": "Minimum temperature at the moment, in Kelvin"
                            },
                            "temp_max": {
                                "type": "number",
                                "example": 289.15,
                                "description": "Maximum temperature at the moment, in Kelvin"
                            },
                            "pressure": {
                                "type": "number",
                                "example": 1022,
                                "description": "Atmospheric pressure, in hPa"
                            },
                            "humidity": {
                                "type": "number",
                                "example": 87,
                                "description": "Humidity, %"
                            }
                        }
                    },
                    "wind": {
                        "type": "object",
                        "properties": {
                            "speed": {
                                "type": "number",
                                "example": 3.6,
                                "description": "Wind speed, in m/s"
                            },
                            "deg": {
                                "type": "number",
                                "example": 260,
                                "description": "Wind direction, in degrees (meteorological)"
                            }
                        }
                    },
                    "clouds": {
                        "type": "number",
                        "example": 75,
                        "description": "Cloudiness, %"
                    },
                    "updated": {
                        "type": "number",
                        "example": 1599517577
                    },
                    "rain": {
                        "type": "number",
                        "example": 0,
                        "description": "Rain volume, in mm"
                    },
                    "snow": {
                        "type": "number",
                        "example": 0,
                        "description": "Snow volume, in mm"
                    },
                    "timezone": {
                        "type": "integer",
                        "description": "Shift in seconds from UTC",
                        "example": 3600
                    }
                }
            },
            "Source": {
                "title": "Source",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "enum": [
                            "hdmi1",
                            "hdmi2",
                            "hdmi3",
                            "av",
                            "pc",
                            "component"
                        ],
                        "example": "hdmi1"
                    },
                    "translations": {
                        "type": "array",
                        "description": "A list of translations to describe the source",
                        "items": {
                            "$ref": "#/components/schemas/SourceTranslation"
                        }
                    }
                }
            },
            "Interel": {
                "title": "Interel",
                "type": "object",
                "properties": {
                    "lights": {
                        "type": "array",
                        "description": "List of lights available",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The ID of the light",
                                    "example": "BedsideLeftToggle"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "The location of the light",
                                    "example": "Bedroom"
                                },
                                "action": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "blinds": {
                        "type": "array",
                        "description": "List of controllable blinds",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "location": {
                                    "type": "string",
                                    "example": "Main window",
                                    "description": "The location of the blinds"
                                }
                            }
                        }
                    },
                    "thermostats": {
                        "type": "array",
                        "description": "List of available thermostats",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Main",
                                    "description": "The name of the thermostat"
                                },
                                "location": {
                                    "type": "string",
                                    "example": "Bedroom",
                                    "description": "The location of the thermostat"
                                }
                            }
                        }
                    },
                    "scenes": {
                        "type": "array",
                        "description": "List of scenes available",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "TV"
                                },
                                "location": {
                                    "type": "string",
                                    "example": "Bedroom",
                                    "description": "The location where the scene will be effected"
                                }
                            }
                        }
                    },
                    "curtains": {
                        "type": "array",
                        "description": "List of curtains available",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "location": {
                                    "type": "string",
                                    "example": "Main window",
                                    "description": "The location of the curtains"
                                }
                            }
                        }
                    }
                }
            },
            "SourceTranslation": {
                "title": "SourceTranslation",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Usually the name of the device connected to the specified source",
                                "example": "Chromecast"
                            },
                            "body": {
                                "type": "string",
                                "description": "Usually the instructions on how to use or exit the specified source",
                                "example": "On the next screen, you will be able to cast your personal streaming content to this TV, press Enter on the remote to continue and Home to return to the main menu."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/SupportedLocales"
                    }
                ]
            },
            "ChannelsResponse": {
                "title": "ChannelsResponse",
                "type": "object",
                "properties": {
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChannelCategory"
                        }
                    }
                }
            },
            "ReceiverApplication": {
                "title": "ReceiverApplication",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "catch_up": {
                        "type": "boolean",
                        "description": "Is the application a catch up app, e.g. iPlayer, All 4 etc"
                    },
                    "translations": {
                        "type": "array",
                        "description": "Translations for the application",
                        "items": {
                            "$ref": "#/components/schemas/ReceiverApplicationTranslation"
                        }
                    },
                    "mirroring": {
                        "type": "boolean",
                        "description": "Is the application a mirroring app allowing the guest device to share their screen."
                    }
                }
            },
            "ReceiverApplicationTranslation": {
                "title": "ReceiverApplicationTranslation",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the application in the specified language",
                                "example": "All 4"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the applicatiion in the specified language",
                                "example": "Phasellus at tellus ut nibh congue imperdiet et ac dui"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/SupportedLocales"
                    }
                ]
            },
            "PurchasedMovie": {
                "title": "PurchasedMovie",
                "type": "object",
                "properties": {
                    "movie_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "valid_to": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-08-24T06:40:22.000Z"
                    }
                }
            },
            "PaginationInfo": {
                "title": "PaginationInfo",
                "type": "object",
                "description": "Pagination information",
                "properties": {
                    "page": {
                        "description": "The current page of the results",
                        "example": 1,
                        "type": "integer"
                    },
                    "count": {
                        "description": "The total number of results available",
                        "example": 22,
                        "type": "integer"
                    },
                    "total_pages": {
                        "description": "The total number of pages available",
                        "example": 1,
                        "type": "integer"
                    }
                }
            },
            "GuestDevice": {
                "title": "GuestDevice",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "mac": {
                        "type": "string",
                        "example": "00:11:22:33:44:55"
                    }
                }
            },
            "GuestDeviceConnection": {
                "title": "GuestDeviceConnection",
                "type": "object",
                "x-tags": [
                    "Cast"
                ],
                "properties": {
                    "chromecast": {
                        "$ref": "#/components/schemas/Chromecast"
                    },
                    "guest_device": {
                        "$ref": "#/components/schemas/GuestDevice"
                    },
                    "room": {
                        "$ref": "#/components/schemas/Room"
                    },
                    "expires_at": {
                        "type": "integer",
                        "format": "date-time",
                        "description": "Time since epoch in seconds"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "SupportedLocales": {
                "title": "SupportedLocales",
                "type": "object",
                "properties": {
                    "locale": {
                        "type": "string",
                        "description": "ISO 639-1 language code. Currently the following are supported:\n\n| Code  | Language           |\n|-------|--------------------|\n| en    | English (UK)       |\n| fr    | French             |\n| es    | Spanish            |\n| de    | German             |\n| zh-CN | Simplified Chinese |\n| en-US | English (US)       |\n| ar    | Arabic             |",
                        "example": "en",
                        "enum": [
                            "en",
                            "de",
                            "fr",
                            "es",
                            "en-US",
                            "ar",
                            "zh-CN"
                        ]
                    }
                }
            },
            "TVRights": {
                "title": "TVRights",
                "type": "object",
                "properties": {
                    "tv_rights": {
                        "type": "string",
                        "enum": [
                            "unlimited",
                            "no_pay",
                            "no_adult",
                            "no_tv"
                        ],
                        "default": "unlimited",
                        "example": "no_tv",
                        "description": "TV rights for the guest. Mappings to common PMS\n\n**FIAS**\n\nTV rights map to the `TV` field of an `RE` Fias message in the following way:\n\n| Nevaya    | Fias | Description                      |\n|-----------|------|----------------------------------|\n| unlimited | TU   | Unlimited pay channels (default) |\n| no_pay    | TM   | No pay movies                    |\n| no_adult  | TX   | No adult movies                  |\n| no_tv     | TN   | No TV rights                     |"
                    }
                }
            },
            "MinibarRights": {
                "title": "MinibarRights",
                "type": "object",
                "properties": {
                    "minibar_rights": {
                        "type": "string",
                        "enum": [
                            "locked",
                            "unlocked",
                            "normal"
                        ],
                        "default": "normal",
                        "example": "normal",
                        "description": "Guests level of access to the minibar. Mappings to common PMS\n\n**FIAS**\n\nMinibar rights map to the `MR` field of an `RE` Fias message in the following way:\n\n| Nevaya   | Fias | Description            |\n|----------|------|------------------------|\n| locked   | ML   | Lock minibar           |\n| unlocked | MU   | Unlock minibar         |\n| normal   | MN   | Minibar normal vending |"
                    }
                }
            },
            "RoomStatus": {
                "title": "RoomStatus",
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The housekeeping status of the room. Mappings to common PMS\n\n**FIAS**\n\nRoom status maps to the `RS` field of an `RE` Fias message in the following way:\n\n| Nevaya             | Fias |\n|--------------------|------|\n| Dirty/Vacant       | 1    |\n| Dirty/Occupied     | 2    |\n| Clean/Vacant       | 3    |\n| Clean/Occupied     | 4    |\n| Inspected/Vacant   | 5    |\n| Inspected/Occupied | 6    |",
                        "enum": [
                            "Dirty/Vacant",
                            "Dirty/Occupied",
                            "Clean/Vacant",
                            "Clean/Occupied",
                            "Inspected/Vacant",
                            "Inspected/Occupied"
                        ],
                        "example": "Clean/Occupied"
                    }
                }
            },
            "MACAddress": {
                "title": "MACAddress",
                "type": "object",
                "properties": {
                    "mac": {
                        "type": "string",
                        "example": "00:11:22:33:44:55",
                        "pattern": "^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$",
                        "description": "MAC address"
                    }
                }
            },
            "RoomTag": {
                "title": "RoomTag",
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "JWT": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": ""
            }
        }
    },
    "tags": [
        {
            "name": "Auth"
        },
        {
            "name": "Cast",
            "description": "Cast specific operations"
        },
        {
            "name": "EPG"
        },
        {
            "name": "Guests"
        },
        {
            "name": "Identity"
        },
        {
            "name": "Interel"
        },
        {
            "name": "Movies"
        },
        {
            "name": "Reservations"
        },
        {
            "name": "Room control"
        },
        {
            "name": "Rooms"
        },
        {
            "name": "TV",
            "description": "TV specific operations"
        },
        {
            "name": "Touch"
        },
        {
            "name": "Weather"
        },
        {
            "name": "Maintenance"
        },
        {
            "name": "WiFi"
        }
    ],
    "security": [
        {
            "JWT": []
        }
    ]
}