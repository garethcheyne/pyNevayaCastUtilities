# coding: utf-8

"""
    Nevaya Platform

    Access to everything Nevaya  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: contact@nevaya.co.uk
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GuestDeviceConnection(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'chromecast': 'Chromecast',
        'guest_device': 'GuestDevice',
        'room': 'Room',
        'expires_at': 'int',
        'id': 'str'
    }

    attribute_map = {
        'chromecast': 'chromecast',
        'guest_device': 'guest_device',
        'room': 'room',
        'expires_at': 'expires_at',
        'id': 'id'
    }

    def __init__(self, chromecast=None, guest_device=None, room=None, expires_at=None, id=None):  # noqa: E501
        """GuestDeviceConnection - a model defined in Swagger"""  # noqa: E501
        self._chromecast = None
        self._guest_device = None
        self._room = None
        self._expires_at = None
        self._id = None
        self.discriminator = None
        if chromecast is not None:
            self.chromecast = chromecast
        if guest_device is not None:
            self.guest_device = guest_device
        if room is not None:
            self.room = room
        if expires_at is not None:
            self.expires_at = expires_at
        if id is not None:
            self.id = id

    @property
    def chromecast(self):
        """Gets the chromecast of this GuestDeviceConnection.  # noqa: E501


        :return: The chromecast of this GuestDeviceConnection.  # noqa: E501
        :rtype: Chromecast
        """
        return self._chromecast

    @chromecast.setter
    def chromecast(self, chromecast):
        """Sets the chromecast of this GuestDeviceConnection.


        :param chromecast: The chromecast of this GuestDeviceConnection.  # noqa: E501
        :type: Chromecast
        """

        self._chromecast = chromecast

    @property
    def guest_device(self):
        """Gets the guest_device of this GuestDeviceConnection.  # noqa: E501


        :return: The guest_device of this GuestDeviceConnection.  # noqa: E501
        :rtype: GuestDevice
        """
        return self._guest_device

    @guest_device.setter
    def guest_device(self, guest_device):
        """Sets the guest_device of this GuestDeviceConnection.


        :param guest_device: The guest_device of this GuestDeviceConnection.  # noqa: E501
        :type: GuestDevice
        """

        self._guest_device = guest_device

    @property
    def room(self):
        """Gets the room of this GuestDeviceConnection.  # noqa: E501


        :return: The room of this GuestDeviceConnection.  # noqa: E501
        :rtype: Room
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this GuestDeviceConnection.


        :param room: The room of this GuestDeviceConnection.  # noqa: E501
        :type: Room
        """

        self._room = room

    @property
    def expires_at(self):
        """Gets the expires_at of this GuestDeviceConnection.  # noqa: E501

        Time since epoch in seconds  # noqa: E501

        :return: The expires_at of this GuestDeviceConnection.  # noqa: E501
        :rtype: int
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this GuestDeviceConnection.

        Time since epoch in seconds  # noqa: E501

        :param expires_at: The expires_at of this GuestDeviceConnection.  # noqa: E501
        :type: int
        """

        self._expires_at = expires_at

    @property
    def id(self):
        """Gets the id of this GuestDeviceConnection.  # noqa: E501


        :return: The id of this GuestDeviceConnection.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GuestDeviceConnection.


        :param id: The id of this GuestDeviceConnection.  # noqa: E501
        :type: str
        """

        self._id = id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GuestDeviceConnection, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuestDeviceConnection):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
